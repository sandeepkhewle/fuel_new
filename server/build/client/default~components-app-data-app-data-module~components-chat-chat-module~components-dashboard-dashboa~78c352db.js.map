{"version":3,"sources":["./node_modules/ngx-device-detector/node_modules/tslib/tslib.es6.js","./src/app/components/generic-modules/generic-table/datatable.module.ts","./node_modules/ngx-device-detector/__ivy_ngcc__/fesm2015/ngx-device-detector.js","./src/app/components/generic-modules/generic-table/datatable/datatable.component.ts","./src/app/components/generic-modules/generic-table/datatable/datatable.component.html","./src/app/components/generic-modules/data-formater/data-formatter.module.ts","./src/app/components/generic-modules/filters/filters.service.ts","./src/app/components/generic-modules/filters/filters/filters.component.ts","./src/app/components/generic-modules/filters/filters/filters.component.html","./src/app/components/generic-modules/generic-table/datatable.service.ts","./src/app/components/generic-modules/filters/filters.module.ts","./node_modules/@angular/http/__ivy_ngcc__/fesm2015/http.js","./src/app/components/generic-modules/data-formater/data-formatter.pipe.ts"],"names":[],"mappings":"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,6FAAqB;YACrB,8FAAe;YACf,wFAAmB;YACnB,qEAAa;YACb,qEAAgB;YAChB,0EAAkB;SACnB;mIAIU,eAAe,mBAbxB,iFAAkB,aAGlB,6FAAqB;QACrB,8FAAe;QACf,wFAAmB;QACnB,qEAAa;QACb,qEAAgB;QAChB,0EAAkB,aAEV,iFAAkB;;;;;;;;;;;;;AC1B9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACkB;AACR;;AAElE;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,IAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,8CAA8C,GAAG,2BAA2B,GAAG;AACrG,UAAU,sBAAsB,OAAO,0CAA0C,EAAE,GAAG;AACtF,UAAU,QAAQ,6CAA6C,GAAG,2BAA2B,GAAG;AAChG,cAAc,uBAAuB,2BAA2B,GAAG;AACnE;AACA;AACA,iBAAiB,mCAAmC;AACpD;AACA,oBAAoB,4CAA4C;AAChE;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAwD;AACvE;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL,cAAc,mCAAmC;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL,YAAY,6BAA6B;AACzC,SAAS,oEAAoE,OAAO,WAAW;AAC/F,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB,uBAAuB,GAAG;AAC/D;AACA,aAAa,sBAAsB,uBAAuB,GAAG;AAC7D;AACA;AACA,iBAAiB,qCAAqC;AACtD;AACA,oBAAoB,4CAA4C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAsD,yBAAyB,GAAG;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC,aAAa,qCAAqC;AAClD,aAAa,mCAAmC;AAChD,aAAa,2CAA2C;AACxD;AACA;AACA;AACA,mFAAmF,cAAc;AACjG;AACA,aAAa,IAAI;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,sDAAe,CAAC,yDAAW,GAAG;AAC/I,8BAA8B,gEAAyB,EAAE,sDAAsD,sCAAsC,EAAE,EAAE;AACzJ,wBAAwB,wDAAU,GAAG,qDAAO,IAAI,4DAAM,CAAC,yDAAW;AAClE,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,8DAAuB,EAAE,6BAA6B;AAClF,4BAA4B,8DAAuB,EAAE;AACrD,YAAY,4DAAY;AACxB,YAAY;AACZ,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aA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Ac,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,eAAe,8CAA8C;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,YAAY,mDAAmD;AAC/D;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,2CAA2C;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,4BAA4B;AAC5B;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,mCAAmC,EAAE;AACrC,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,yEAAyE;AACxF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,2BAA2B;AAC/B;AACA,6CAA6C,0BAA0B;AACvE,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB,eAAe,+CAA+C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA,kDAAkD,uBAAuB;AACzE,wBAAwB,gBAAgB;AACxC,YAAY,YAAY,YAAY,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oFAAoF;AACnG;AACA;AACA,oEAAoE,yCAAyC;AAC7G,4BAA4B,gEAAyB,EAAE,gEAAgE;AACvH;AACA;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB,8BAA8B;AAClD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gBAAgB,kCAAkC;AAClD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,mBAAmB,wCAAwC;AAC3D;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,mBAAmB,8BAA8B;AACjD;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA,mCAAmC,eAAe,MAAM;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,EAAE;AACzF;AACA,sFAAsF,EAAE;AACxF;AACA,uEAAuE,aAAa;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,+BAA+B,EAAE;AACjC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wCAAwC,YAAY,GAAG,gBAAgB,YAAY,SAAS;AAC5F;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,gBAAgB,iBAAiB,EAAE;AACxD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,WAAW,WAAW,GAAG,GAAG,WAAW;AAChE;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gBAAgB,uCAAuC,EAAE,eAAe;AACxE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,qBAAqB,gEAAyB,EAAE,kDAAkD;AAClG,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,0DAA0D,SAAS;AACnE;AACA;AACA,oFAAoF,SAAS;AAC7F;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+DAA+D,6DAA6D;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2DAA2D,gCAAgC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,sDAAe,gBAAgB,sDAAe,mBAAmB;AACvJ,qBAAqB,gEAAyB,EAAE,kDAAkD;AAClG;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK;AACL;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,qBAAqB,GAAG,wBAAwB,EAAE,EAAE,QAAQ,EAAE;;AAE7F;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,2DAA2D,yCAAyC;AACpG;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,yEAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,8BAA8B,sDAAe,cAAc,sDAAe,mBAAmB,sDAAe,gBAAgB;AAC9K,mBAAmB,gEAAyB,EAAE,8CAA8C;AAC5F;AACA;AACA,KAAK,mBAAmB;AACxB,KAAK,wBAAwB;AAC7B,KAAK;AACL;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,mBAAmB,GAAG,wBAAwB,GAAG,qBAAqB,EAAE,EAAE,QAAQ,EAAE;;AAEnH;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB,eAAe,4EAA4E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,+BAA+B;AAC/B,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA,eAAe;AACf,sBAAsB,eAAe;AACrC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,gBAAgB;AACxC,YAAY,YAAY,qBAAqB,wBAAwB;AACrE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,oDAAoD,EAAE;AACjF;AACA,kEAAkE,wCAAwC;AAC1G,2BAA2B,gEAAyB,EAAE,8DAA8D;AACpH;AACA;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,YAAY;AACxF,IAAI,aAAa;AACjB,qFAAqF,YAAY;AACjG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,+BAA+B,EAAE;AACjC,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,0BAA0B;AAC1B,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,8BAA8B,EAAE;AAChC,WAAW,EAAE;AACb,4BAA4B,EAAE;AAC9B,WAAW,EAAE;AACb,mCAAmC,EAAE;;AAErC;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE,0CAA0C,cAAc;AACjF;AACA;AACA;AACA;AACA;AACA,+DAA+D,gBAAgB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB;AACtB,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe,wDAAwD;AACjF;AACA,WAAW,0BAA0B;AACrC,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mJAAmJ,EAAE;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB,sDAAe,qBAAqB,sDAAe,kBAAkB;AACnI,aAAa,gEAAyB,EAAE,kCAAkC;AAC1E;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK;AACL;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,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","file":"default~components-app-data-app-data-module~components-chat-chat-module~components-dashboard-dashboa~78c352db.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DataTableComponent } from './datatable/datatable.component';\r\n\r\n// gloabal angular mterial module\r\nimport { AngularMaterialModule } from '../../../shared-modules/angular.material.module';\r\n// Member Service\r\nimport { DataTableService } from './datatable.service';\r\n// formatter module\r\nimport { FormatterModule } from '../../../shared-modules/format-module/formatter.module';\r\nimport { DataFormatterModule } from '../data-formater/data-formatter.module';\r\nimport { FiltersModule } from '../filters/filters.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DataTableComponent\r\n  ],\r\n  imports: [\r\n    AngularMaterialModule,\r\n    FormatterModule,\r\n    DataFormatterModule,\r\n    FiltersModule,\r\n    HttpClientModule,\r\n    NgxDatatableModule\r\n  ],\r\n  exports: [DataTableComponent],\r\n  providers: [DataTableService]\r\n})\r\nexport class DatatableModule { }\r\n","import { __decorate, __param, __metadata } from 'tslib';\nimport { Injectable, Inject, PLATFORM_ID, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\n\n/**\n * Created by ahsanayaz on 08/11/2016.\n */\nimport * as ɵngcc0 from '@angular/core';\nconst BROWSERS = {\n    CHROME: 'Chrome',\n    FIREFOX: 'Firefox',\n    SAFARI: 'Safari',\n    OPERA: 'Opera',\n    IE: 'IE',\n    MS_EDGE: 'MS-Edge',\n    MS_EDGE_CHROMIUM: 'MS-Edge-Chromium',\n    FB_MESSANGER: 'FB-Messanger',\n    SAMSUNG: 'Samsung',\n    UCBROWSER: 'UC-Browser',\n    UNKNOWN: 'Unknown'\n};\nconst DEVICES = {\n    CHROME_BOOK: 'Chrome-Book',\n    PS4: 'PS4',\n    CHROMECAST: 'Chromecast',\n    APPLE_TV: 'Apple-TV',\n    GOOGLE_TV: 'Google-TV',\n    UNKNOWN: 'Unknown'\n};\nconst MOBILES = {\n    ANDROID: '\\\\bAndroid\\\\b|\\\\bMobile\\\\b',\n    VITA: '\\\\bVita\\\\b',\n    FIREFOX_OS: '\\\\bFirefox-OS\\\\b',\n    IPHONE: '\\\\biPhone\\\\b|\\\\biPod\\\\b',\n    BLACKBERRY: '\\\\bBlackBerry\\\\b|\\\\bBB10\\\\b|rim[0-9]+',\n    WINDOWS_PHONE: '\\\\bWindows-Phone\\\\b',\n    HTC: `HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|\n        APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|\n        ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\\\bEVO\\\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel`,\n    NEXUS: `Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6`,\n    DELL: 'Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\\\b001DL\\\\b|\\\\b101DL\\\\b|\\\\bGS01\\\\b',\n    MOTOROLA: `Motorola|DROIDX|DROID BIONIC|\\\\bDroid\\\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|\n        A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|\n        MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|\n        ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|\n        WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|\n        XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|\n        XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\\\bMoto E\\\\b|XT1068|XT1092|XT1052`,\n    SAMSUNG: `\\\\bSamsung\\\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|\n        GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|\n        GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|\n        GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|\n        GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|\n        GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|\n        GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|\n        GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|\n        GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|\n        GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|\n        GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|\n        GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|\n        GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|\n        GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|\n        GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|\n        GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|\n        GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|\n        GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|\n        SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|\n        SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|\n        SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|\n        SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|\n        SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|\n        SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|\n        SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|\n        SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|\n        SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|\n        SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|\n        SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|\n        SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|\n        SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|\n        SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|\n        SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|\n        SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|\n        SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|\n        SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|\n        SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|\n        SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|\n        SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|\n        SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|\n        SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|\n        SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|\n        SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|\n        SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|\n        SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|\n        SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|\n        SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|\n        SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|\n        SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|\n        GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|\n        GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|\n        GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|\n        SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|\n        SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|\n        SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F`,\n    LG: `\\\\bLG\\\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|\n        LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|\n        C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|\n        LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|\n        VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|\n        MS323|M257)`,\n    SONY: 'SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533',\n    ASUS: 'Asus.*Galaxy|PadFone.*Mobile',\n    NOKIA_LUMIA: 'Lumia [0-9]{3,4}',\n    MICROMAX: 'Micromax.*\\\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\\\b',\n    PALM: 'PalmSource|Palm',\n    VERTU: 'Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature',\n    PANTECH: `PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|\n        IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|\n        IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|\n        CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|\n        P2000|P7040|P7000|C790`,\n    FLY: 'IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250',\n    WIKO: `KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|\n        SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|\n        CINK KING|CINK PEAX|CINK SLIM|SUBLIM`,\n    I_MOBILE: 'i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)',\n    SIMVALLEY: '\\\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\\\b',\n    WOLFGANG: 'AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q',\n    ALCATEL: 'Alcatel',\n    NINTENDO: 'Nintendo (3DS|Switch)',\n    AMOI: 'Amoi',\n    INQ: 'INQ',\n    GENERIC_PHONE: `Tapatalk|PDA;|SAGEM|\\\\bmmp\\\\b|pocket|\\\\bpsp\\\\b|symbian|Smartphone|smartfon|treo|up.browser|\n        up.link|vodafone|\\\\bwap\\\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser`,\n};\nconst TABLETS = {\n    iPad: 'iPad|iPad.*Mobile',\n    NexusTablet: 'Android.*Nexus[\\\\s]+(7|9|10)',\n    GoogleTablet: 'Android.*Pixel C',\n    SamsungTablet: `SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|\n        GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|\n        SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|\n        GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|\n        SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|\n        GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|\n        SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|\n        SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|\n        GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|\n        SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|\n        GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|\n        SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|\n        SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|\n        SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|\n        SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|\n        SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|\n        SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|\n        SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|\n        SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835`,\n    Kindle: `Kindle|Silk.*Accelerated|Android.*\\\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|\n        KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\\\b|Android.*Silk\\/[0-9.]+ like Chrome\\\n        /[0-9.]+ (?!Mobile)`,\n    SurfaceTablet: 'Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)',\n    HPTablet: 'HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10',\n    AsusTablet: `^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|\n        TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|\n        Slider SL101|\\\\bK00F\\\\b|\\\\bK00C\\\\b|\\\\bK00E\\\\b|\\\\bK00L\\\\b|TX201LA|ME176C|ME102A|\\\\bM80TA\\\\b|ME372CL|\n        ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\\\bME70C\\\\b|ME581C|\n        ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\\\bP027\\\\b|\\\\bP024\\\\b|\\\\bP00C\\\\b`,\n    BlackBerryTablet: 'PlayBook|RIM Tablet',\n    HTCtablet: 'HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410',\n    MotorolaTablet: 'xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617',\n    NookTablet: 'Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2',\n    AcerTablet: `Android.*; \\\\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|\n        W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\\\b|W3-810|\\\\bA3-A10\\\\b|\\\\bA3-A11\\\\b|\n        \\\\bA3-A20\\\\b|\\\\bA3-A30`,\n    ToshibaTablet: 'Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO',\n    LGTablet: '\\\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\\\b',\n    FujitsuTablet: 'Android.*\\\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\\\b',\n    PrestigioTablet: `PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|\n        PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|\n        PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|\n        PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|\n        PMT5887|PMT5001|PMT5002`,\n    LenovoTablet: `Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|\n        YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|\n        B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304F|TB-X304L|TB-8703F|Tab2A7-10F|TB2-X30L`,\n    DellTablet: 'Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7',\n    YarvikTablet: `Android.*\\\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|\n        TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|\n        TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|\n        TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|\n        TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\\\b`,\n    MedionTablet: 'Android.*\\\\bOYO\\\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB',\n    ArnovaTablet: '97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2',\n    IntensoTablet: 'INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004',\n    IRUTablet: 'M702pro',\n    MegafonTablet: 'MegaFon V9|\\\\bZTE V9\\\\b|Android.*\\\\bMT7A\\\\b',\n    EbodaTablet: 'E-Boda (Supreme|Impresspeed|Izzycomm|Essential)',\n    AllViewTablet: 'Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)',\n    ArchosTablet: `\\\\b(101G9|80G9|A101IT)\\\\b|Qilive 97R|Archos5|\\\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10|\n         Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\\\b`,\n    AinolTablet: 'NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark',\n    NokiaLumiaTablet: 'Lumia 2520',\n    SonyTablet: `Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|\n        SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|\n        EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|\n        SGP612|SGP712`,\n    PhilipsTablet: '\\\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\\\b',\n    CubeTablet: 'Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT',\n    CobyTablet: `MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|\n        MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010`,\n    MIDTablet: `M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|\n        MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|\n        MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10`,\n    MSITablet: `MSI \\\\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|\n        Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\\\b`,\n    SMiTTablet: 'Android.*(\\\\bMID\\\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)',\n    RockChipTablet: 'Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A',\n    FlyTablet: 'IQ310|Fly Vision',\n    bqTablet: `Android.*(bq)?.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|\n        Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))|Maxwell.*Lite|Maxwell.*Plus`,\n    HuaweiTablet: `MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|\n        S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09`,\n    NecTablet: '\\\\bN-06D|\\\\bN-08D',\n    PantechTablet: 'Pantech.*P4100',\n    BronchoTablet: 'Broncho.*(N701|N708|N802|a710)',\n    VersusTablet: 'TOUCHPAD.*[78910]|\\\\bTOUCHTAB\\\\b',\n    ZyncTablet: 'z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900',\n    PositivoTablet: 'TB07STA|TB10STA|TB07FTA|TB10FTA',\n    NabiTablet: 'Android.*\\\\bNabi',\n    KoboTablet: 'Kobo Touch|\\\\bK080\\\\b|\\\\bVox\\\\b Build|\\\\bArc\\\\b Build',\n    DanewTablet: 'DSlide.*\\\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\\\b',\n    TexetTablet: `NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|\n        TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|\n        TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|\n        TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|\n        TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|\n        TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|\n        TB-436|TB-416|TB-146SE|TB-126SE`,\n    PlaystationTablet: 'Playstation.*(Portable|Vita)',\n    TrekstorTablet: 'ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab',\n    PyleAudioTablet: '\\\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\\\b',\n    AdvanTablet: `Android.* \\\\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|\n        T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\\\b `,\n    DanyTechTablet: `Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|\n        Genius TAB GII|Genius TAB GIII|Genius Tab S1`,\n    GalapadTablet: 'Android.*\\\\bG1\\\\b(?!\\\\))',\n    MicromaxTablet: 'Funbook|Micromax.*\\\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\\\b',\n    KarbonnTablet: 'Android.*\\\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\\\b',\n    AllFineTablet: 'Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide',\n    PROSCANTablet: `\\\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|\n        PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|\n        PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|\n        PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\\\b`,\n    YONESTablet: 'BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026',\n    ChangJiaTablet: `TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|\n        TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|\n        TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|\n        TPC10111|TPC10203|TPC10205|TPC10503`,\n    GUTablet: 'TX-A1301|TX-M9002|Q702|kf026',\n    PointOfViewTablet: `TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|\n        TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|\n        TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|\n        TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10`,\n    OvermaxTablet: `OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|\n        MagicTab|Stream|TB-08|TB-09)|Qualcore 1027`,\n    HCLTablet: 'HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync',\n    DPSTablet: 'DPS Dream 9|DPS Dual 7',\n    VistureTablet: 'V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10',\n    CrestaTablet: 'CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989',\n    MediatekTablet: '\\\\bMT8125|MT8389|MT8135|MT8377\\\\b',\n    ConcordeTablet: 'Concorde([ ]+)?Tab|ConCorde ReadMan',\n    GoCleverTablet: `GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|\n        TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|\n        GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|\n        TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|\n        TAB R104|TAB R83.3|TAB A1042`,\n    ModecomTablet: `FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|\n        FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|\n        FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003`,\n    VoninoTablet: `\\\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|\n        Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|\n        Primus[ _]?QS|Android.*\\\\bQ8\\\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\\\b`,\n    ECSTablet: 'V07OT2|TM105A|S10OT1|TR10CS1',\n    StorexTablet: `eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab`,\n    VodafoneTablet: 'SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497',\n    EssentielBTablet: `Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2`,\n    RossMoorTablet: 'RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711',\n    iMobileTablet: 'i-mobile i-note',\n    TolinoTablet: 'tolino tab [0-9.]+|tolino shine',\n    AudioSonicTablet: '\\\\bC-22Q|T7-QC|T-17B|T-17P\\\\b',\n    AMPETablet: 'Android.* A78 ',\n    SkkTablet: 'Android.* (SKYPAD|PHOENIX|CYCLOPS)',\n    TecnoTablet: 'TECNO P9|TECNO DP8D',\n    JXDTablet: `Android.* \\\\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|\n        S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|\n        P1000|P300|S18|S6600|S9100)\\\\b`,\n    iJoyTablet: `Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|\n        Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|\n        Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|\n        Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|\n        Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)`,\n    FX2Tablet: 'FX2 PAD7|FX2 PAD10',\n    XoroTablet: `KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|\n        PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|\n        PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|\n        TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151`,\n    ViewsonicTablet: 'ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a',\n    VerizonTablet: 'QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1',\n    OdysTablet: 'LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\\\bXELIO\\\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10',\n    CaptivaTablet: 'CAPTIVA PAD',\n    IconbitTablet: `NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|\n        NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S`,\n    TeclastTablet: `T98 4G|\\\\bP80\\\\b|\\\\bX90HD\\\\b|X98 Air|X98 Air 3G|\\\\bX89\\\\b|P80 3G|\\\\bX80h\\\\b|P98 Air|\n        \\\\bX89HD\\\\b|P98 3G|\\\\bP90HD\\\\b|P89 3G|X98 3G|\\\\bP70h\\\\b|P79HD 3G|G18d 3G|\\\\bP79HD\\\\b|\\\\bP89s\\\\b|\\\\bA88\\\\b|\n        \\\\bP10HD\\\\b|\\\\bP19HD\\\\b|G18 3G|\\\\bP78HD\\\\b|\\\\bA78\\\\b|\\\\bP75\\\\b|G17s 3G|G17h 3G|\\\\bP85t\\\\b|\\\\bP90\\\\b|\n        \\\\bP11\\\\b|\\\\bP98t\\\\b|\\\\bP98HD\\\\b|\\\\bG18d\\\\b|\\\\bP85s\\\\b|\\\\bP11HD\\\\b|\\\\bP88s\\\\b|\\\\bA80HD\\\\b|\\\\bA80se\\\\b|\n        \\\\bA10h\\\\b|\\\\bP89\\\\b|\\\\bP78s\\\\b|\\\\bG18\\\\b|\\\\bP85\\\\b|\\\\bA70h\\\\b|\\\\bA70\\\\b|\\\\bG17\\\\b|\\\\bP18\\\\b|\\\\bA80s\\\\b|\n        \\\\bA11s\\\\b|\\\\bP88HD\\\\b|\\\\bA80h\\\\b|\\\\bP76s\\\\b|\\\\bP76h\\\\b|\\\\bP98\\\\b|\\\\bA10HD\\\\b|\\\\bP78\\\\b|\\\\bP88\\\\b|\\\\bA11\\\\b|\n        \\\\bA10t\\\\b|\\\\bP76a\\\\b|\\\\bP76t\\\\b|\\\\bP76e\\\\b|\\\\bP85HD\\\\b|\\\\bP85a\\\\b|\\\\bP86\\\\b|\\\\bP75HD\\\\b|\\\\bP76v\\\\b|\\\\bA12\\\\b|\n        \\\\bP75a\\\\b|\\\\bA15\\\\b|\\\\bP76Ti\\\\b|\\\\bP81HD\\\\b|\\\\bA10\\\\b|\\\\bT760VE\\\\b|\\\\bT720HD\\\\b|\\\\bP76\\\\b|\\\\bP73\\\\b|\\\\bP71\\\\b|\n        \\\\bP72\\\\b|\\\\bT720SE\\\\b|\\\\bC520Ti\\\\b|\\\\bT760\\\\b|\\\\bT720VE\\\\b|T720-3GE|T720-WiFi`,\n    OndaTablet: `\\\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|\n        V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|\n        V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|\n        Vi40)\\\\b[\\\\s]+|V10 \\\\b4G\\\\b`,\n    JaytechTablet: 'TPC-PA762',\n    BlaupunktTablet: 'Endeavour 800NG|Endeavour 1010',\n    DigmaTablet: '\\\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\\\b',\n    EvolioTablet: 'ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\\\bEvotab\\\\b|\\\\bNeura\\\\b',\n    LavaTablet: 'QPAD E704|\\\\bIvoryS\\\\b|E-TAB IVORY|\\\\bE-TAB\\\\b',\n    AocTablet: 'MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712',\n    MpmanTablet: `MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\n        \\\\bMPG7\\\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|\n        MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010`,\n    CelkonTablet: 'CT695|CT888|CT[\\\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\\\bCT-1\\\\b',\n    WolderTablet: `miTab \\\\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|\n        POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|\n        FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\\\b`,\n    MediacomTablet: 'M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA',\n    MiTablet: '\\\\bMI PAD\\\\b|\\\\bHM NOTE 1W\\\\b',\n    NibiruTablet: 'Nibiru M1|Nibiru Jupiter One',\n    NexoTablet: 'NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI',\n    LeaderTablet: `TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|\n        TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100`,\n    UbislateTablet: 'UbiSlate[\\\\s]?7C',\n    PocketBookTablet: 'Pocketbook',\n    KocasoTablet: '\\\\b(TB-1207)\\\\b',\n    HisenseTablet: '\\\\b(F5281|E2371)\\\\b',\n    Hudl: 'Hudl HT7S3|Hudl 2',\n    TelstraTablet: 'T-Hub2',\n    GenericTablet: `Android.*\\\\b97D\\\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\\\bA7EB\\\\b|CatNova8|\n        A1_07|CT704|CT1002|\\\\bM721\\\\b|rk30sdk|\\\\bEVOTAB\\\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|\n        Tablet-PC-4|Tagi Tab|\\\\bM6pro\\\\b|CT1020W|arc 10HD|\\\\bTP750\\\\b|\\\\bQTAQZ3\\\\b|WVT101|TM1088|KT107`\n};\nconst OS = {\n    WINDOWS: 'Windows',\n    MAC: 'Mac',\n    IOS: 'iOS',\n    ANDROID: 'Android',\n    LINUX: 'Linux',\n    UNIX: 'Unix',\n    FIREFOX_OS: 'Firefox-OS',\n    CHROME_OS: 'Chrome-OS',\n    WINDOWS_PHONE: 'Windows-Phone',\n    UNKNOWN: 'Unknown'\n};\nconst OS_VERSIONS = {\n    WINDOWS_3_11: 'windows-3-11',\n    WINDOWS_95: 'windows-95',\n    WINDOWS_ME: 'windows-me',\n    WINDOWS_98: 'windows-98',\n    WINDOWS_CE: 'windows-ce',\n    WINDOWS_2000: 'windows-2000',\n    WINDOWS_XP: 'windows-xp',\n    WINDOWS_SERVER_2003: 'windows-server-2003',\n    WINDOWS_VISTA: 'windows-vista',\n    WINDOWS_7: 'windows-7',\n    WINDOWS_8_1: 'windows-8-1',\n    WINDOWS_8: 'windows-8',\n    WINDOWS_10: 'windows-10',\n    WINDOWS_PHONE_7_5: 'windows-phone-7-5',\n    WINDOWS_PHONE_8_1: 'windows-phone-8-1',\n    WINDOWS_PHONE_10: 'windows-phone-10',\n    WINDOWS_NT_4_0: 'windows-nt-4-0',\n    MACOSX_15: 'mac-os-x-15',\n    MACOSX_14: 'mac-os-x-14',\n    MACOSX_13: 'mac-os-x-13',\n    MACOSX_12: 'mac-os-x-12',\n    MACOSX_11: 'mac-os-x-11',\n    MACOSX_10: 'mac-os-x-10',\n    MACOSX_9: 'mac-os-x-9',\n    MACOSX_8: 'mac-os-x-8',\n    MACOSX_7: 'mac-os-x-7',\n    MACOSX_6: 'mac-os-x-6',\n    MACOSX_5: 'mac-os-x-5',\n    MACOSX_4: 'mac-os-x-4',\n    MACOSX_3: 'mac-os-x-3',\n    MACOSX_2: 'mac-os-x-2',\n    MACOSX: 'mac-os-x',\n    UNKNOWN: 'unknown'\n};\nconst OS_RE = {\n    WINDOWS: { and: [{ or: [/\\bWindows|(Win\\d\\d)\\b/, /\\bWin 9x\\b/] }, { not: /\\bWindows Phone\\b/ }] },\n    MAC: { and: [/\\bMac OS\\b/, { not: { or: [/\\biPhone\\b/, /\\bWindows Phone\\b/] } }] },\n    IOS: { and: [{ or: [/\\biPad\\b/, /\\biPhone\\b/, /\\biPod\\b/] }, { not: /\\bWindows Phone\\b/ }] },\n    ANDROID: { and: [/\\bAndroid\\b/, { not: /\\bWindows Phone\\b/ }] },\n    LINUX: /\\bLinux\\b/,\n    UNIX: /\\bUNIX\\b/,\n    FIREFOX_OS: { and: [/\\bFirefox\\b/, /Mobile\\b/] },\n    CHROME_OS: /\\bCrOS\\b/,\n    WINDOWS_PHONE: { or: [/\\bIEMobile\\b/, /\\bWindows Phone\\b/] },\n    PS4: /\\bMozilla\\/5.0 \\(PlayStation 4\\b/,\n    VITA: /\\bMozilla\\/5.0 \\(Play(S|s)tation Vita\\b/\n};\nconst BROWSERS_RE = {\n    CHROME: {\n        and: [{ or: [/\\bChrome\\b/, /\\bCriOS\\b/, /\\bHeadlessChrome\\b/] }, {\n                not: {\n                    or: [/\\bOPR\\b/, /\\bEdg(e|A|iOS)\\b/, /\\bEdg\\/\\b/, /\\bSamsungBrowser\\b/, /\\bUCBrowser\\b/]\n                }\n            }]\n    },\n    FIREFOX: { or: [/\\bFirefox\\b/, /\\bFxiOS\\b/] },\n    SAFARI: {\n        and: [/^((?!CriOS).)*\\Safari\\b.*$/, {\n                not: {\n                    or: [/\\bOPR\\b/, /\\bEdg(e|A|iOS)\\b/, /\\bEdg\\/\\b/, /\\bWindows Phone\\b/, /\\bSamsungBrowser\\b/, /\\bUCBrowser\\b/]\n                }\n            }]\n    },\n    OPERA: { or: [/Opera\\b/, /\\bOPR\\b/] },\n    IE: { or: [/\\bMSIE\\b/, /\\bTrident\\b/, /^Mozilla\\/5\\.0 \\(Windows NT 10\\.0; Win64; x64\\)$/] },\n    MS_EDGE: { or: [/\\bEdg(e|A|iOS)\\b/] },\n    MS_EDGE_CHROMIUM: /\\bEdg\\/\\b/,\n    PS4: /\\bMozilla\\/5.0 \\(PlayStation 4\\b/,\n    VITA: /\\bMozilla\\/5.0 \\(Play(S|s)tation Vita\\b/,\n    FB_MESSANGER: /\\bFBAN\\/MessengerForiOS\\b/,\n    SAMSUNG: /\\bSamsungBrowser\\b/,\n    UCBROWSER: /\\bUCBrowser\\b/,\n};\nconst DEVICES_RE = {\n    ANDROID: { and: [/\\bAndroid\\b/, { not: /Windows Phone/ }] },\n    I_PAD: /\\biPad\\b/,\n    IPHONE: { and: [/\\biPhone\\b/, { not: /Windows Phone/ }] },\n    I_POD: /\\biPod\\b/,\n    BLACKBERRY: /\\bblackberry\\b/,\n    FIREFOX_OS: { and: [/\\bFirefox\\b/, /\\bMobile\\b/] },\n    CHROME_BOOK: /\\bCrOS\\b/,\n    WINDOWS_PHONE: { or: [/\\bIEMobile\\b/, /\\bWindows Phone\\b/] },\n    PS4: /\\bMozilla\\/5.0 \\(PlayStation 4\\b/,\n    CHROMECAST: /\\bCrKey\\b/,\n    APPLE_TV: /^iTunes-AppleTV\\/4.1$/,\n    GOOGLE_TV: /\\bGoogleTV\\b/,\n    VITA: /\\bMozilla\\/5.0 \\(Play(S|s)tation Vita\\b/\n};\nconst OS_VERSIONS_RE = {\n    WINDOWS_3_11: /Win16/,\n    WINDOWS_95: /(Windows 95|Win95|Windows_95)/,\n    WINDOWS_ME: /(Win 9x 4.90|Windows ME)/,\n    WINDOWS_98: /(Windows 98|Win98)/,\n    WINDOWS_CE: /Windows CE/,\n    WINDOWS_2000: /(Windows NT 5.0|Windows 2000)/,\n    WINDOWS_XP: /(Windows NT 5.1|Windows XP)/,\n    WINDOWS_SERVER_2003: /Windows NT 5.2/,\n    WINDOWS_VISTA: /Windows NT 6.0/,\n    WINDOWS_7: /(Windows 7|Windows NT 6.1)/,\n    WINDOWS_8_1: /(Windows 8.1|Windows NT 6.3)/,\n    WINDOWS_8: /(Windows 8|Windows NT 6.2)/,\n    WINDOWS_10: /(Windows NT 10.0)/,\n    WINDOWS_PHONE_7_5: /(Windows Phone OS 7.5)/,\n    WINDOWS_PHONE_8_1: /(Windows Phone 8.1)/,\n    WINDOWS_PHONE_10: /(Windows Phone 10)/,\n    WINDOWS_NT_4_0: { and: [/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/, { not: /Windows NT 10.0/ }] },\n    MACOSX: /(MAC OS X\\s*[^ 0-9])/,\n    MACOSX_3: /(Darwin 10.3|Mac OS X 10.3)/,\n    MACOSX_4: /(Darwin 10.4|Mac OS X 10.4)/,\n    MACOSX_5: /(Mac OS X 10.5)/,\n    MACOSX_6: /(Mac OS X 10.6)/,\n    MACOSX_7: /(Mac OS X 10.7)/,\n    MACOSX_8: /(Mac OS X 10.8)/,\n    MACOSX_9: /(Mac OS X 10.9)/,\n    MACOSX_10: /(Mac OS X 10.10)/,\n    MACOSX_11: /(Mac OS X 10.11)/,\n    MACOSX_12: /(Mac OS X 10.12)/,\n    MACOSX_13: /(Mac OS X 10.13)/,\n    MACOSX_14: /(Mac OS X 10.14)/,\n    MACOSX_15: /(Mac OS X 10.15)/\n};\nconst BROWSER_VERSIONS_RE_MAP = {\n    CHROME: [/\\bChrome\\/([\\d\\.]+)\\b/, /\\bCriOS\\/([\\d\\.]+)\\b/, /\\bHeadlessChrome\\/([\\d\\.]+)\\b/],\n    FIREFOX: /\\bFirefox\\/([\\d\\.]+)\\b/,\n    SAFARI: /\\bVersion\\/([\\d\\.]+)\\b/,\n    OPERA: [/\\bVersion\\/([\\d\\.]+)\\b/, /\\bOPR\\/([\\d\\.]+)\\b/],\n    IE: [/\\bMSIE ([\\d\\.]+\\w?)\\b/, /\\brv:([\\d\\.]+\\w?)\\b/],\n    MS_EDGE: /\\bEdg(?:e|A|iOS)\\/([\\d\\.]+)\\b/,\n    MS_EDGE_CHROMIUM: /\\bEdg\\/([\\d\\.]+)\\b/,\n    SAMSUNG: /\\bSamsungBrowser\\/([\\d\\.]+)\\b/,\n    UCBROWSER: /\\bUCBrowser\\/([\\d\\.]+)\\b/,\n};\nconst BROWSER_VERSIONS_RE = Object.keys(BROWSER_VERSIONS_RE_MAP).reduce(function (obj, key) {\n    obj[BROWSERS[key]] = BROWSER_VERSIONS_RE_MAP[key];\n    return obj;\n}, {});\n\nvar Constants = /*#__PURE__*/Object.freeze({\n    BROWSERS: BROWSERS,\n    DEVICES: DEVICES,\n    MOBILES: MOBILES,\n    TABLETS: TABLETS,\n    OS: OS,\n    OS_VERSIONS: OS_VERSIONS,\n    OS_RE: OS_RE,\n    BROWSERS_RE: BROWSERS_RE,\n    DEVICES_RE: DEVICES_RE,\n    OS_VERSIONS_RE: OS_VERSIONS_RE,\n    BROWSER_VERSIONS_RE_MAP: BROWSER_VERSIONS_RE_MAP,\n    BROWSER_VERSIONS_RE: BROWSER_VERSIONS_RE\n});\n\n/**\n * Created by ahsanayaz on 08/11/2016.\n */\nclass ReTree {\n    constructor() {\n    }\n    test(string, regex) {\n        let self = this;\n        if (typeof regex === 'string') {\n            regex = new RegExp(regex);\n        }\n        if (regex instanceof RegExp) {\n            return regex.test(string);\n        }\n        else if (regex && Array.isArray(regex.and)) {\n            return regex.and.every(function (item) {\n                return self.test(string, item);\n            });\n        }\n        else if (regex && Array.isArray(regex.or)) {\n            return regex.or.some(function (item) {\n                return self.test(string, item);\n            });\n        }\n        else if (regex && regex.not) {\n            return !self.test(string, regex.not);\n        }\n        else {\n            return false;\n        }\n    }\n    exec(string, regex) {\n        let self = this;\n        if (typeof regex === 'string') {\n            regex = new RegExp(regex);\n        }\n        if (regex instanceof RegExp) {\n            return regex.exec(string);\n        }\n        else if (regex && Array.isArray(regex)) {\n            return regex.reduce(function (res, item) {\n                return (!!res) ? res : self.exec(string, item);\n            }, null);\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nlet DeviceDetectorService = class DeviceDetectorService {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.ua = '';\n        this.userAgent = '';\n        this.os = '';\n        this.browser = '';\n        this.device = '';\n        this.os_version = '';\n        this.browser_version = '';\n        if (isPlatformBrowser(this.platformId)) {\n            this.ua = window.navigator.userAgent;\n        }\n        this._setDeviceInfo();\n    }\n    /**\n     * @author Ahsan Ayaz\n     * @desc Sets the initial value of the device when the service is initiated.\n     * This value is later accessible for usage\n     */\n    _setDeviceInfo() {\n        let reTree = new ReTree();\n        let ua = this.ua;\n        this.userAgent = ua;\n        let mappings = [\n            { const: 'OS', prop: 'os' },\n            { const: 'BROWSERS', prop: 'browser' },\n            { const: 'DEVICES', prop: 'device' },\n            { const: 'OS_VERSIONS', prop: 'os_version' },\n        ];\n        mappings.forEach((mapping) => {\n            this[mapping.prop] = Object.keys(Constants[mapping.const]).reduce((obj, item) => {\n                obj[Constants[mapping.const][item]] = reTree.test(ua, Constants[`${mapping.const}_RE`][item]);\n                return obj;\n            }, {});\n        });\n        mappings.forEach((mapping) => {\n            this[mapping.prop] = Object.keys(Constants[mapping.const])\n                .map((key) => {\n                return Constants[mapping.const][key];\n            }).reduce((previousValue, currentValue) => {\n                return (previousValue === Constants[mapping.const].UNKNOWN && this[mapping.prop][currentValue])\n                    ? currentValue : previousValue;\n            }, Constants[mapping.const].UNKNOWN);\n        });\n        this.browser_version = '0';\n        if (this.browser !== BROWSERS.UNKNOWN) {\n            let re = BROWSER_VERSIONS_RE[this.browser];\n            let res = reTree.exec(ua, re);\n            if (!!res) {\n                this.browser_version = res[1];\n            }\n        }\n    }\n    /**\n     * @author Ahsan Ayaz\n     * @desc Returns the device information\n     * @returns the device information object.\n     */\n    getDeviceInfo() {\n        const deviceInfo = {\n            userAgent: this.userAgent,\n            os: this.os,\n            browser: this.browser,\n            device: this.device,\n            os_version: this.os_version,\n            browser_version: this.browser_version\n        };\n        return deviceInfo;\n    }\n    /**\n     * @author Ahsan Ayaz\n     * @desc Compares the current device info with the mobile devices to check\n     * if the current device is a mobile and also check current device is tablet so it will return false.\n     * @returns whether the current device is a mobile\n     */\n    isMobile() {\n        if (this.isTablet()) {\n            return false;\n        }\n        const mobiles = MOBILES;\n        let isMob = false;\n        for (const key in mobiles) {\n            if (mobiles.hasOwnProperty(key)) {\n                const pattern = new RegExp(mobiles[key]);\n                if (pattern.test(this.userAgent)) {\n                    isMob = true;\n                    break;\n                }\n            }\n        }\n        return isMob;\n    }\n    ;\n    /**\n     * @author Ahsan Ayaz\n     * @desc Compares the current device info with the tablet devices to check\n     * if the current device is a tablet.\n     * @returns whether the current device is a tablet\n     */\n    isTablet() {\n        const tablets = TABLETS;\n        let isTab = false;\n        for (const key in tablets) {\n            if (tablets.hasOwnProperty(key)) {\n                const pattern = new RegExp(tablets[key]);\n                if (pattern.test(this.userAgent)) {\n                    isTab = true;\n                    break;\n                }\n            }\n        }\n        return isTab;\n    }\n    ;\n    /**\n     * @author Ahsan Ayaz\n     * @desc Compares the current device info with the desktop devices to check\n     * if the current device is a desktop device.\n     * @returns whether the current device is a desktop device\n     */\n    isDesktop() {\n        const desktopDevices = [\n            DEVICES.PS4,\n            DEVICES.CHROME_BOOK,\n            DEVICES.UNKNOWN\n        ];\n        if (this.device === DEVICES.UNKNOWN) {\n            if (this.isMobile() || this.isTablet()) {\n                return false;\n            }\n        }\n        return desktopDevices.indexOf(this.device) > -1;\n    }\n    ;\n};\nDeviceDetectorService.ɵfac = function DeviceDetectorService_Factory(t) { return new (t || DeviceDetectorService)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nDeviceDetectorService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DeviceDetectorService, factory: function (t) { return DeviceDetectorService.ɵfac(t); } });\nDeviceDetectorService = __decorate([ __param(0, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object])\n], DeviceDetectorService);\n\nvar DeviceDetectorModule_1;\nlet DeviceDetectorModule = DeviceDetectorModule_1 = class DeviceDetectorModule {\n    static forRoot() {\n        return {\n            ngModule: DeviceDetectorModule_1,\n            providers: [DeviceDetectorService]\n        };\n    }\n};\nDeviceDetectorModule.ɵfac = function DeviceDetectorModule_Factory(t) { return new (t || DeviceDetectorModule)(); };\nDeviceDetectorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DeviceDetectorModule });\nDeviceDetectorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceDetectorService, [{\n        type: Injectable\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceDetectorModule, { imports: function () { return [CommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceDetectorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BROWSERS, BROWSERS_RE, BROWSER_VERSIONS_RE, BROWSER_VERSIONS_RE_MAP, DEVICES, DEVICES_RE, DeviceDetectorModule, DeviceDetectorService, MOBILES, OS, OS_RE, OS_VERSIONS, OS_VERSIONS_RE, ReTree, TABLETS };\n\n//# sourceMappingURL=ngx-device-detector.js.map","import { Component, OnInit, ViewChild, Input, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { DataTableService } from '../datatable.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatatableComponent, SelectionType } from '@swimlane/ngx-datatable';\r\n\r\n@Component({\r\n  selector: 'trends-datatable',\r\n  templateUrl: './datatable.component.html',\r\n  styleUrls: ['./datatable.component.css'],\r\n  providers:[DataTableService]\r\n})\r\nexport class DataTableComponent implements OnInit, OnChanges {\r\n\r\n  @ViewChild(DatatableComponent, { static: false }) private dataTable: DatatableComponent | undefined;\r\n  loader: boolean = false;\r\n  @Input() postObj: any = {};\r\n  @Input()\r\n  selectionType!: SelectionType | keyof typeof SelectionType;\r\n  @Output() onSelectRows = new EventEmitter<any>();\r\n  @Output() onRowClickEvent = new EventEmitter<any>();\r\n  @Output() onActonModal = new EventEmitter<any>()\r\n  membersAttributeList: any = [];\r\n  membersList: any;\r\n  membersListCount: any;\r\n  offset: any = 0;\r\n  filtersArray: any = [];\r\n  selected: any = [];\r\n  isAttendance: boolean = false;\r\n  filterObj: any = {\r\n    limit: 10,\r\n    skip: 0,\r\n    orderby: \"\",\r\n    orderin: \"desc\",\r\n    search: \"\",\r\n    filters: {}\r\n  };\r\n  newAttributeObj = {\r\n    attributeList: [],\r\n    page: \"\"\r\n  }\r\n  queyValue: any = {};\r\n  userDetails: any;\r\n  countSharedObj: any;\r\n  labelArr: any = [''];\r\n  coloumnShow: any = [];\r\n  url: any;\r\n  columns:any= 100;\r\n\r\n  // scrollbarH:number = 50;\r\n\r\n\r\n  constructor(\r\n    private dataTableService: DataTableService,\r\n    public snackBar: MatSnackBar,\r\n    public router: Router,\r\n    private activeRoute: ActivatedRoute,\r\n  ) {\r\n    this.activeRoute.queryParams.subscribe(params => {\r\n      if (params && params.data) {\r\n        this.queyValue = JSON.parse(params.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n\r\n    if (this.queyValue && this.queyValue.filters) {\r\n      this.filterObj = this.queyValue;\r\n\r\n      this.offset = this.queyValue.skip / this.queyValue.limit;\r\n      this.filterObj.pagelength = this.queyValue.limit;\r\n    } else {\r\n      this.filterObj.page = this.postObj.page;\r\n    }\r\n    if (this.postObj && this.postObj.day) {\r\n      this.filterObj.day = this.postObj.day;\r\n    }\r\n    if ((this.postObj.page == 'attendanceMember') || (this.postObj.page == 'attendanceTrainer') || (this.postObj.page == 'attendanceStaff')) {\r\n      this.filterObj.limit = 100;\r\n    }\r\n    this.refreshData();\r\n    if (this.router.url.includes('/attendance')) {\r\n      this.isAttendance = true;\r\n    } else {\r\n      this.isAttendance = false;\r\n    }\r\n\r\n    console.log(\"------\", this.filterObj);\r\n  \r\n    console.log(\"------\", this.newAttributeObj);\r\n    console.log(\"------\", this.countSharedObj);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.newAttributeObj.page = this.postObj.page;\r\n    // this.dummy();\r\n  }\r\n\r\n  refreshData() {\r\n    this.getData();\r\n  }\r\n\r\n  // dummy() {\r\n  //   let postObj = {\r\n  //     'page': this.newAttributeObj.page\r\n  //   }\r\n  //   this.dataTableService.columnsData(postObj).subscribe(res => {\r\n  //     if (res.data) {\r\n  //       this.coloumnShow = res.data.columnArray;\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  getData() {\r\n    this.loader = true;\r\n    this.dataTableService.getData(this.filterObj).subscribe(res => {\r\n      if (res && res.attributeList && res.attributeList.length > 0) {\r\n        this.membersAttributeList = res.attributeList;\r\n        this.newAttributeObj.attributeList = res.attributeList;\r\n        this.membersListCount = res.count;\r\n        this.membersList = res.data;\r\n        // this.countSharedObj = { total1: res.total1, total2: res.total2 }\r\n      }\r\n      this.loader = false;\r\n    });\r\n    setTimeout(() => {\r\n      if (this.dataTable) this.dataTable.offset = this.filterObj.skip == 0 ? 0 : (Number(this.filterObj.skip) / Number(this.filterObj.limit));\r\n      // console.log('offset', this.dataTable.offset);\r\n    }, 1000);\r\n  }\r\n\r\n  onPage(event:any) {\r\n    this.filterObj.limit = event.limit;\r\n    this.filterObj.skip = event.offset * event.limit;\r\n    // this.offset = event.limit ? (this.filterObj.skip / event.limit) : event.offset;\r\n    const queryObj = {\r\n      data: JSON.stringify(this.filterObj)\r\n    }\r\n    let urlToAdd = (this.router.url.includes('?')) ? this.router.url.split('?')[0] : this.router.url;\r\n    this.router.navigate([urlToAdd], { queryParams: queryObj });\r\n\r\n    this.getData();\r\n  }\r\n\r\n  onSort(event:any) {\r\n    const index = this.membersAttributeList.findIndex(\r\n      (      obj: { prop: any; }) => obj.prop == event.column.prop\r\n    );\r\n    const sortProp = this.membersAttributeList[index].prop;\r\n    this.filterObj.orderin = event.newValue;\r\n    this.filterObj.orderby = sortProp;\r\n    this.filterObj.skip = 0;\r\n    this.getData();\r\n  }\r\n\r\n  getRowClass(row:any) {\r\n    return '';\r\n  }\r\n\r\n  onClickedOnRow(row:any) { }\r\n\r\n  onClickRow(row:any) {\r\n    this.onRowClickEvent.emit(row);\r\n  }\r\n\r\n  onSelect(event:any) {\r\n    this.onSelectRows.emit(event.selected);\r\n  }\r\n\r\n  showProfilePic(row:any) {\r\n    // const URL = this.sanitizer.bypassSecurityTrustUrl(row.profilePic);\r\n    // window.location.href =  URL;\r\n  }\r\n\r\n  onAction(func:any, row:any) {\r\n    this.onActonModal.emit({ name: func, rowData: row });\r\n  }\r\n\r\n  onApplyFilters(event:any) {\r\n    if (event.filters && event.filters) {\r\n      this.filterObj.filters = Object.assign({}, event.filters.filters);\r\n    }\r\n    if (event.pagelength) {\r\n      this.filterObj.limit = event.pagelength;\r\n    }\r\n    if (event.search) {\r\n      this.filterObj.search = event.search;\r\n    }\r\n    if (event == 'clearSearch') {\r\n      delete this.filterObj.search;\r\n    }\r\n    if (event == 'clearfilters') {\r\n      this.offset = 0;\r\n      this.filterObj = {\r\n        filters: {},\r\n        page: this.postObj.page,\r\n        limit: 10,\r\n        skip: 0,\r\n        orderby: \"\",\r\n        orderin: \"desc\",\r\n      }\r\n      // this.activeRoute.queryParams.subscribe(params => {\r\n      //   if (params && params.data) {\r\n      //     let url: string = this.router.url.substring(0, this.router.url.indexOf(\"?\"));\r\n      //     this.router.navigateByUrl(url);\r\n      //   }\r\n      // });\r\n\r\n    }\r\n\r\n    const queryObj = {\r\n      data: JSON.stringify(this.filterObj)\r\n    }\r\n\r\n    let urlToAdd = (this.router.url.includes('?')) ? this.router.url.split('?')[0] : this.router.url;\r\n    this.router.navigate([urlToAdd], { queryParams: queryObj });\r\n    this.refreshData();\r\n  }\r\n\r\n  checkShowColumn(name:any) {\r\n    if (this.coloumnShow.indexOf(name) !== -1) {\r\n      return false\r\n    } else return true\r\n  }\r\n\r\n  // setLabel(value: any) {\r\n  //   switch (value) {\r\n  //     case 'Male':\r\n  //       return 'lbl-m';\r\n  //       break;\r\n  //     case 'Female':\r\n  //       return 'lbl-f';\r\n  //       break;\r\n  //     case 'Enquiry':\r\n  //       return 'lbl-rec';\r\n  //       break;\r\n  //     case 'Follow Up':\r\n  //       return 'lbl-fl';\r\n  //       break;\r\n  //     case 'Converted':\r\n  //       return 'lbl-conv';\r\n  //       break;\r\n  //     case 'Closed':\r\n  //       return 'lbl-enq';\r\n  //       break;\r\n  //     case 'Hot':\r\n  //       return 'lbl-cl';\r\n  //       break;\r\n  //     case 'Warm':\r\n  //       return 'lbl-warm';\r\n  //       break;\r\n  //     case 'Cold':\r\n  //       return 'lbl-enq';\r\n  //       break;\r\n  //     case 'Expected':\r\n  //       return 'lbl-warm';\r\n  //       break;\r\n  //     case 'Manager':\r\n  //       return 'lbl-man';\r\n  //       break;\r\n  //     case 'Receptionist':\r\n  //       return 'lbl-rec';\r\n  //       break;\r\n  //     case 'Others':\r\n  //       return 'lbl-oth';\r\n  //       break;\r\n  //     case 'Trainer':\r\n  //       return 'lbl-trainer';\r\n  //       break;\r\n  //     case true:\r\n  //       return 'lbl-conv';\r\n  //       break;\r\n  //     case false:\r\n  //       return 'lbl-cl';\r\n  //       break;\r\n  //     case 'Active':\r\n  //       return 'lbl-conv';\r\n  //       break;\r\n  //     case 'Deactive':\r\n  //       return 'lbl-cl';\r\n  //       break;\r\n  //     case 'Trainer Plan':\r\n  //       return 'lbl-trainer';\r\n  //       break;\r\n  //     case 'Membership Plan':\r\n  //       return 'lbl-plans';\r\n  //       break;\r\n  //     case 'Add On Service':\r\n  //       return 'lbl-adOn';\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // }\r\n\r\n  openWhatsApp(row:any) {\r\n    this.url = \"https://api.whatsapp.com/send?phone=+91\" + row.phoneNo + \"&text=Hi\"\r\n    window.open(this.url);\r\n  }\r\n}\r\n","<!-- <ng-container *ngIf=\"loader\">\r\n    <div class=\"fyt-spinner-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <div class=\"text-center fyt-loading-msg\">Please wait</div>\r\n    </div>\r\n</ng-container> -->\r\n<ng-container *ngIf=\"!isAttendance\">\r\n    <ng-container *ngIf=\"filterObj && filterObj.page\">\r\n        <trends-filters [inputFilterObj]=\"filterObj\"  [attributeObj]=\"newAttributeObj\" (onFilter)=\"onApplyFilters($event)\">\r\n        </trends-filters>\r\n    </ng-container>\r\n</ng-container>\r\n\r\n<div class=\"row mt-10 mb-10\">\r\n    <div class=\"col-md-12\">\r\n        <ng-container *ngIf=\"membersAttributeList  && membersAttributeList.length > 0\">\r\n            \r\n            <!-- [selectionType]=\"'checkbox'\" -->\r\n            <!-- [columns]=\"columns\" -->\r\n            <ngx-datatable #dataTable class='fyt-line-hight material fixed-header striped' [rows]=\"membersList\" [scrollbarV]=\"false\" [headerHeight]=\"35\" [footerHeight]=\"50\"  [rowHeight]=\"35\" [rowClass]=\"getRowClass\" [columnMode]=\"'force'\" [scrollbarH]=\"true\"\r\n                [externalPaging]=\"true\" [count]=\"membersListCount\" [loadingIndicator]=\"loader\" [externalSorting]=\"true\" (sort)=\"onSort($event)\"  [limit]=\"filterObj.limit\" (page)=\"onPage($event)\" (select)='onSelect($event)'>\r\n\r\n                <!-- <ng-container *ngIf=\"postObj.page != 'attendanceMember' && postObj.page != 'attendanceTrainer' && postObj.page != 'communication' && postObj.page !='collection' && postObj.page !='accounts' && postObj.page !='expense'\">\r\n                    <ngx-datatable-column [width]=\"60\" [sortable]=\"false\" [canAutoResize]=\"false\" [draggable]=\"false\" [resizeable]=\"false\" [headerCheckboxable]=\"true\" [checkboxable]=\"true\" [frozenLeft]=\"true\">\r\n                    </ngx-datatable-column>\r\n                </ng-container> -->\r\n\r\n                <ng-container *ngFor=\"let propdata of membersAttributeList;let i = index\">\r\n                    <ng-container *ngIf=\"checkShowColumn(propdata.name)\">\r\n                        <ngx-datatable-column [name]=\"propdata.name\" [prop]=\"propdata.prop\" [frozenLeft]=\"(propdata.prop == 'button') ? true : false\" [width]=\"propdata.colSize\" [headerClass]=\"propdata.headerClass\" [sortable]=\"propdata.sortable\" [headerCheckboxable]=\"true\">\r\n                            <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\r\n                                <div [ngClass]=\"propdata.class\">\r\n                                    <a class=\"fyt-link-btn fyt-datatable-font\"  (click)=\"onClickRow(row)\">\r\n                                        <!-- <span *ngIf=\"propdata.prop=='fullName'\"> -->\r\n                                        {{value | formatter:propdata.pipe}}\r\n                                        <!-- [ngClass]=\"propdata.label ? this[propdata.setLabel](value):''\" -->\r\n                                        <!-- </span> -->\r\n                                    </a>\r\n                                    <ng-container *ngIf=\"propdata.prop == 'button'\">\r\n                                        <button mat-icon-button [matMenuTriggerFor]=\"actionFilter\" class=\"fyt-tbl-action-btn\">\r\n                                        <mat-icon>more_horiz</mat-icon>\r\n                                    </button>\r\n                                        <mat-menu #actionFilter overlapTrigger=\"false\">\r\n                                            <ng-container *ngIf=\"propdata.actions && propdata.actions.length > 0\">\r\n                                                <ng-container *ngFor=\"let action of propdata.actions\">\r\n                                                    <button mat-menu-item (click)=\"onAction(action.function, row)\">{{action.name}}</button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </mat-menu>\r\n                                    </ng-container>\r\n                                </div>\r\n                                <ng-container *ngIf=\"propdata.prop == 'whatsApp'\">\r\n                                    <img src=\"../../../../../assets/img/whatsapp.png\" class=\"fyt-link-btn\" width=\"20px\" alt=\"\" (click)=\"openWhatsApp(row)\">\r\n                                </ng-container>\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n\r\n            </ngx-datatable>\r\n        </ng-container>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataFormatter } from './data-formatter.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [DataFormatter],\r\n  providers: [],\r\n  exports: [DataFormatter]\r\n})\r\nexport class DataFormatterModule {}","import { Injectable } from '@angular/core';\r\nimport { GlobalApiService } from '../../../shared-modules/global-api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n// import 'rxjs/add/operator/map'\r\n\r\nimport { AuthService } from '../../../shared-modules/services/auth.service';\r\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ResponseContentType, RequestOptions, Headers } from '@angular/http';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport * as FileSaver from 'file-saver';\r\n// import { RequestOptions } from 'https';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FiltersService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private globalApiService: GlobalApiService,\r\n    private authService: AuthService,\r\n    // private http1: Http\r\n  ) { }\r\n\r\n  //   get all the filters\r\n  getFilters(postObj: any): Observable<any> {\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/structure/getFilters', postObj)\r\n      .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n\r\n  //columns show/hide\r\n  columnsShow(postObj: any): Observable<any> {\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/adminUser/addUpdateColumnMapping', postObj)\r\n      .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n\r\n  columnsData(postObj: any): Observable<any> {\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/adminUser/getColumnMapping', postObj)\r\n      .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n\r\n  // get excel download\r\n  getExcel(postObj: any): Observable<any> {\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/structure/exportExcel', postObj).pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n\r\n  download(postBody: any): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append(\"Accept\", 'application/x-www-form-urlencoded');\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Authorization\", JSON.stringify(localStorage.getItem('token')));\r\n\r\n    let options = new RequestOptions({\r\n      headers: headers\r\n    })\r\n\r\n    // options.responseType = \"blob\";\r\n    postBody.options = options;\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/structure/exportExcel', postBody, { responseType: 'blob' }).pipe(map((response: any) => {\r\n      // Removed checking of valid response\r\n      let fileBlob = response;\r\n      let blob = new Blob([fileBlob], {\r\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n        // must match the Accept type\r\n      });\r\n      const filename = 'data.xlsx';\r\n      FileSaver.saveAs(blob, filename);\r\n    }))\r\n      .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FiltersService } from '../filters.service';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n// import { PageLengths } from 'src/app/components/members/data';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { DeviceDetectorService } from 'ngx-device-detector';\r\nimport { Router } from '@angular/router';\r\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\nimport { default as _rollupMoment } from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { saveAs } from 'file-saver';\r\nconst moment = _rollupMoment || _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD MMM YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD MMM YYYY',\r\n    monthYearLabel: 'YYYY',\r\n    dateA11yLabel: 'DD MMM YYYY',\r\n    monthYearA11yLabel: 'YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'trends-filters',\r\n  templateUrl: './filters.component.html',\r\n  styleUrls: ['./filters.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class FiltersComponent implements OnInit {\r\n  @Input() inputFilterObj: any;\r\n  // @Input() countsObj: any;\r\n  @Input() attributeObj: any;\r\n  @Output() onFilter = new EventEmitter<any>();\r\n\r\n  filtersArray: any = [];\r\n  pageLengths: any;\r\n  isMobile = false;\r\n  deviceInfo: any;\r\n  isSmallScreen = false;\r\n  postObj: any = {\r\n    filters: {}\r\n  };\r\n  chipsObj: any = {}\r\n  pageLength: any;\r\n  searchStr: any;\r\n  filterChips: any = [];\r\n  isShow: boolean = true;\r\n  loader2: any = {};\r\n  columns: any = [];\r\n  hideColumns: any = [];\r\n  fileName = '...';\r\n  userDetails: any;\r\n  restrictionFlag: boolean = false;\r\n  settingsRestrictions: any;\r\n  isRestricted: boolean = true;\r\n\r\n  constructor(\r\n    private filterService: FiltersService,\r\n    private media: MediaMatcher,\r\n    private deviceDetector: DeviceDetectorService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    // window onload\r\n    window.onload = (e: any) => {\r\n      this.epicFunction();\r\n      this.isSmallScreen = this.media.matchMedia('(max-width: 991px)').matches;\r\n    };\r\n    // window onresize\r\n    window.onresize = (e: any) => {\r\n      this.epicFunction();\r\n      this.isSmallScreen = this.media.matchMedia('(max-width: 991px)').matches;\r\n    };\r\n    this.isSmallScreen = this.media.matchMedia('(max-width: 991px)').matches;\r\n    this.epicFunction();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.postObj.search = this.inputFilterObj.search;\r\n    this.postObj.filters = this.inputFilterObj.filters;\r\n    this.userDetails = JSON.parse(localStorage.getItem('userDetails') || '{}');\r\n    this.settingsRestrictions = JSON.parse(localStorage.getItem('settings') || '{}');\r\n    console.log('this.inputFilterObj', this.inputFilterObj);\r\n    // console.log('this.countsObj--', this.countsObj);\r\n    console.log('attributeObj--', this.attributeObj);\r\n\r\n    this.getFilters();\r\n  }\r\n\r\n  epicFunction() {\r\n    this.deviceInfo = this.deviceDetector.getDeviceInfo();\r\n    this.isMobile = this.deviceDetector.isMobile();\r\n  }\r\n\r\n  getFilters() {\r\n    // console.log('this.isRestricted', this.isRestricted);\r\n    const postBody = {\r\n      page: this.inputFilterObj.page\r\n    }\r\n    let pageMap = { 'members': \"91\", 'subscription': \"92\", 'enquiry': \"93\", 'staff': \"94\", 'trainer': \"95\", 'accounts': \"96\", 'collection': \"97\", 'expense': \"98\", 'communication': \"99\", 'equipment': \"100\" }\r\n    // let pageNo = pageMap[this.inputFilterObj.page];\r\n    // console.log('pageNo', pageNo);\r\n    // console.log('this.settingsRestrictions', this.settingsRestrictions);\r\n    // console.log('settingsRestrictions.includes(pageNo)', this.settingsRestrictions.includes(pageNo));\r\n\r\n    // if (this.settingsRestrictions && this.settingsRestrictions.includes(pageNo)) {\r\n    //   // console.log('inside if');\r\n    //   this.isRestricted = false;\r\n    //   // console.log('this.isRestricted', this.isRestricted);\r\n    // }\r\n\r\n    this.filterService.getFilters(postBody).subscribe(res => {\r\n      if (res && res.Status == 'Success') {\r\n        if (res.data && res.data.length > 0) {\r\n          this.filtersArray = JSON.parse(JSON.stringify(res.data));\r\n          this.displayChips(JSON.stringify(this.postObj.filters));\r\n        }\r\n        this.pageLengths = this.filtersArray[0].options;\r\n        if (this.inputFilterObj.limit)\r\n          this.pageLength = this.inputFilterObj.limit;\r\n        else\r\n          this.pageLength = this.pageLengths[0].value;\r\n      }\r\n    });\r\n  }\r\n\r\n  applyPageLength(event: any) {\r\n    this.onFilter.emit({ pagelength: event });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const postBody = this.inputFilterObj;\r\n    this.filterService.download(postBody).subscribe((res: any) => {\r\n      \r\n    });\r\n  }\r\n\r\n  applyFilters() {\r\n    this.postObj = Object.assign({}, this.postObj);\r\n    this.onFilter.emit({ filters: this.postObj });\r\n    this.displayChips(JSON.stringify(this.postObj.filters));\r\n    const queryObj = {\r\n      data: JSON.stringify(this.inputFilterObj)\r\n    }\r\n    let urlToAdd = (this.router.url.includes('?')) ? this.router.url.split('?')[0] : this.router.url;\r\n    this.router.navigate([urlToAdd], { queryParams: queryObj });\r\n  }\r\n\r\n  clearFilters() {\r\n    this.onFilter.emit('clearfilters');\r\n    this.filterChips = [];\r\n    this.postObj.filters = {};\r\n    this.pageLength = this.pageLengths[0].value;\r\n  }\r\n\r\n  // for filters\r\n  onChangeFilter(param1: any, model: any, event: any) {\r\n  }\r\n\r\n  onSearch(event: any) {\r\n    if (event.target.value) {\r\n      this.onFilter.emit({ search: event.target.value })\r\n      this.inputFilterObj.search = event.target.value;\r\n    } else {\r\n      this.onFilter.emit({ search: this.postObj.search })\r\n      this.inputFilterObj.search = this.postObj.search;\r\n    }\r\n    const queryObj = {\r\n      data: JSON.stringify(this.inputFilterObj)\r\n    }\r\n    let urlToAdd = (this.router.url.includes('?')) ? this.router.url.split('?')[0] : this.router.url;\r\n    this.router.navigate([urlToAdd], { queryParams: queryObj });\r\n\r\n  }\r\n\r\n  clearSearch(event: any) {\r\n    this.onFilter.emit('clearSearch');\r\n    this.postObj.search = '';\r\n    // this.clearFilters();\r\n  }\r\n\r\n  displayChips(chipObj: any) {\r\n    this.filterChips = [];\r\n    this.chipsObj = JSON.parse(chipObj);\r\n    if (this.filtersArray && this.filtersArray.length > 0) {\r\n      for (const key in this.chipsObj) {\r\n        if (key) {\r\n          let optDetails = [];\r\n          const filteredModel = this.filtersArray.find(\r\n            (object: any) => object.model === key\r\n          );\r\n          if (typeof this.chipsObj[key] === 'string' && filteredModel) {\r\n            this.filterChips.push({\r\n              name: filteredModel.name,\r\n              display: undefined,\r\n              value: this.chipsObj[key],\r\n              model: filteredModel.model,\r\n              type: filteredModel.type,\r\n              nonRemovable: filteredModel.nonRemovable\r\n            });\r\n          } else if (this.chipsObj[key].constructor === Array) {\r\n            if (filteredModel && filteredModel.options) {\r\n              for (let i = 0; i < this.chipsObj[key].length; i++) {\r\n                let resultObj = [];\r\n                resultObj = filteredModel.options.find((object: any) => {\r\n                  if (filteredModel.value) {\r\n                    return (\r\n                      this.chipsObj[key][i] === object[filteredModel.value]\r\n                    );\r\n                  } else {\r\n                    return this.chipsObj[key][i] === object;\r\n                  }\r\n                });\r\n                optDetails.push(resultObj);\r\n              }\r\n            }\r\n            for (let j = 0; j < optDetails.length; j++) {\r\n              if (filteredModel && optDetails[j] && optDetails[j][filteredModel.value]) {\r\n                this.filterChips.push({\r\n                  name: filteredModel.name,\r\n                  display: optDetails[j][filteredModel.display],\r\n                  value: optDetails[j][filteredModel.value],\r\n                  model: filteredModel.model,\r\n                  type: filteredModel.type,\r\n                  nonRemovable: filteredModel.nonRemovable\r\n                });\r\n              } else if (filteredModel) {\r\n                this.filterChips.push({\r\n                  name: filteredModel.name,\r\n                  display: undefined,\r\n                  value: optDetails[j],\r\n                  model: filteredModel.model,\r\n                  type: filteredModel.type,\r\n                  nonRemovable: filteredModel.nonRemovable\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAccountsFilter(obj: any) {\r\n    if (this.chipsObj[obj.model].constructor === Array) {\r\n      const index = this.chipsObj[obj.model].indexOf(obj.value);\r\n      if (index > -1) {\r\n        this.chipsObj[obj.model].splice(index, 1);\r\n      }\r\n    } else {\r\n      this.chipsObj[obj.model] = undefined;\r\n      // this.clearFilters();\r\n    }\r\n    this.postObj.filters = this.chipsObj;\r\n    this.applyFilters();\r\n\r\n  }\r\n\r\n  getAttributes() {\r\n    // console.log(this.attributeObj);\r\n    this.isShow = false;\r\n    if (this.attributeObj && this.attributeObj.attributeList) {\r\n      // if (this.attributeObj.attributeList.lastIndexOf()) {\r\n\r\n      // }\r\n      // console.log(\"---\",this.attributeObj.attributeList.lastIndexOf());\r\n\r\n      this.columns = this.attributeObj.attributeList;\r\n      // console.log(\"lastIndex\",this.columns.lastIndexOf());\r\n\r\n      this.columns.forEach((element: any) => {\r\n        this.loader2[element.name] = true;\r\n      });\r\n      // console.log(\"input Object----:\", this.columns);\r\n      let postObj = {\r\n        'page': this.attributeObj.page\r\n      };\r\n      this.filterService.columnsData(postObj).subscribe(res => {\r\n        // console.log(\"new Data\", res.data);\r\n        if (res.data && res.data.columnArray) this.hideColumns = res.data.columnArray;\r\n        this.hideColumns.forEach((element: any) => {\r\n          this.loader2[element] = false;\r\n        });\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  checkBox(columnName: any) {\r\n    if (this.hideColumns.indexOf(columnName) > -1) return false\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  onChecked(event: any) {\r\n    // console.log(event);\r\n    let eventIndex = this.hideColumns.indexOf(event)\r\n    if (eventIndex > -1) {\r\n      this.hideColumns.splice(eventIndex, 1)\r\n      this.loader2[event] = false;\r\n    } else {\r\n      this.hideColumns.push(event);\r\n      this.loader2[event] = true;\r\n    }\r\n    this.checkBox(event)\r\n    // console.log('this.hideColumns', this.hideColumns);\r\n\r\n  }\r\n\r\n  columnStatus() {\r\n    let postObj = {\r\n      'page': this.attributeObj.page,\r\n      'columnArray': this.hideColumns\r\n    }\r\n    this.filterService.columnsShow(postObj).subscribe(res => {\r\n      // console.log(res.Status);\r\n      if (res.statusCode == '001') {\r\n\r\n        this.snackBar.open(res.Message, 'Got it!', { duration: 2000 });\r\n        this.isShow = true;\r\n        window.location.reload();\r\n      } else {\r\n        this.snackBar.open(res.Message, 'Got it!', { duration: 2000 });\r\n        this.isShow = true;\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelColStatus() {\r\n    this.isShow = true\r\n  }\r\n\r\n  restrict() {\r\n    this.restrictionFlag = true;\r\n  }\r\n\r\n  onCardAction() {\r\n    this.restrictionFlag = false;\r\n  }\r\n}","<!-- <mat-expansion-panel [expanded]=\"true\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n            Filters\r\n        </mat-panel-title>\r\n    </mat-expansion-panel-header> -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <mat-card class=\"fyt-filter-bg\">\r\n                <ng-container *ngIf=\"isShow\">\r\n                    <!-- <div class=\"fyt-display-flex\"> -->\r\n                    <div class=\"row pl-0 pr-0 ml-0 mr-0\">\r\n                        <!-- <div class=\"fyt-pagelength-width\">\r\n                            <mat-form-field >\r\n                                <mat-select (selectionChange)=\"applyPageLength($event.value)\" [(ngModel)]=\"pageLength\">\r\n                                    <mat-option *ngFor=\"let pagelength of pageLengths\" [value]=\"pagelength.value\">\r\n                                        {{pagelength.name}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <span class=\"fyt-label-filter\">Row per page</span>\r\n                        <span class=\"sp\"></span> -->\r\n                        <div class=\"col-10 col-md-10 col-lg-4 col-xl-6 pl-0 pr-0 ml-0 mr-0\">\r\n                            <div class=\"fyt-search-box ml-10\">\r\n                                <!-- <mat-form-field style=\"background: rgba(0, 0, 0, 0.05);border-radius: 30px;line-height: 1.0; border: none;padding-bottom: 0.25em;\"> -->\r\n                                <mat-form-field>\r\n                                    <input type=\"text\" matInput placeholder=\"Search...\" (keyup.enter)='onSearch($event)'\r\n                                        [(ngModel)]=\"postObj.search\">\r\n                                    <button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"postObj.search\"\r\n                                        (click)=\"clearSearch($event)\" style=\"padding-right: 35px;\">\r\n                                        <mat-icon style=\"font-size: 20px;\">close</mat-icon>\r\n                                    </button>\r\n                                    <button matSuffix mat-icon-button (click)=\"onSearch($event)\">\r\n                                        <mat-icon>search</mat-icon>\r\n                                        <!-- <img  src=\"../../../../../assets/img/Asset 225@1.5x.png\" width=\"23px\" style=\"box-shadow: 0px 0px 4px 0px darkgrey;\r\n                                    border-radius: 50px; margin-left: -20px;\" alt=\"\"> -->\r\n                                    </button>\r\n                                </mat-form-field>\r\n    \r\n    \r\n                                <!-- <form #searchForm=\"ngForm\" class=\"input-field\">\r\n                                <i class=\"material-icons suffix tooltipped\" data-tooltip=\"I am tooltip\">\r\n                                    <button type=\"button\" class=\"\" *ngIf=\"postObj.search\" mat-icon-button (click)=\"clearSearch($event)\" aria-label=\"clear\">\r\n                                        <mat-icon>close</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n    \r\n                                <i class=\"material-icons suffix22 tooltipped\" data-tooltip=\"I am tooltip\">\r\n                                    <img type=\"submit\" mat-icon-button suffix (click)=\"onSearch($event)\" src=\"../../../../../assets/img/Asset 225@1.5x.png\" width=\"23px\" style=\"box-shadow: 0px 0px 4px 0px darkgrey;\r\n                                    border-radius: 50px;\" alt=\"\">\r\n                                </i>\r\n    \r\n                                <input type=\"text\" [(ngModel)]=\"postObj.phoneNo\" placeholder=\"Search...\" (keyup.enter)='onSearch($event)' [(ngModel)]=\"postObj.search\" name=\"searchBox\" pattern=\"[0-9]{10,11}\" class=\"py-1 new-Montserrat-Regular new-333333\" id=\"icon_telephone\">\r\n                            </form> -->\r\n                            </div>\r\n                        </div>\r\n                        <ng-container *ngIf=\"isMobile || isSmallScreen\">\r\n                            <div class=\"col-2 col-md-2 col-lg-12 pl-0 pr-0 ml-0 mr-0 fr\">\r\n                                <div class=\"fyt-filter-icon\">\r\n                                    <!-- <button [matMenuTriggerFor]=\"membersMobileFilter\" class=\"fr-imp\" matTooltip=\"Filter Members\" matTooltipPosition=\"before\" mat-icon-button>\r\n                                    <mat-icon>filter_list</mat-icon>\r\n                                </button> -->\r\n                                    <img class=\"fr pt-10\" [matMenuTriggerFor]=\"membersMobileFilter\"\r\n                                        src=\"../../../../../assets/icons/new/filter.png\" width=\"20px\" alt=\"\">\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                        <div class=\"col-6 col-md-6 col-lg-2 col-xl-2 pl-0 pr-0 ml-0 mr-0\">\r\n                            <!-- <div class=\"fr-side\" *ngFor=\"let filter of filtersArray;\">\r\n                                <span [ngClass]=\"filter.class\" class=\"\"\r\n                                    *ngIf=\"filter.type === 'count' && countsObj != undefined\">{{filter.name}}\r\n                                    -\r\n                                    {{countsObj[filter.model]}}</span>\r\n                            </div> -->\r\n                        </div>\r\n    \r\n                        <!-- <span class=\"sp\"></span> -->\r\n                        <!-- <div class=\"col-6 col-md-7 col-lg-3 col-xl-2 pl-0 pr-0 ml-0 mr-0\">\r\n                            <span class=\"fyt-link-btn new-F7931E fr-side\">\r\n                                <a (click)=\"getAttributes()\"><img src=\"../../../../../assets/icons/new/Asset 18@2x.png\"\r\n                                        width=\"20px\" alt=\"\"> &nbsp;<span class=\"new-Montserrat-Medium\"\r\n                                        style=\"border-bottom: 1px solid #F7931E;\"> Select columns</span></a>\r\n                            </span>\r\n                        </div> -->\r\n                       \r\n                        <div class=\"col-12 col-md-5 col-lg-3 col-xl-2 pl-0 pr-0 ta-r ml-0 mr-0\">\r\n                            <span class=\"fyt-link-btn new-2E7D32 fr-side\">\r\n                                <a (click)=\"!isRestricted && restrict() || isRestricted && downloadExcel()\"><img\r\n                                        src=\"../../../../../assets/img/Asset 17@2x.png\" width=\"20px\" alt=\"\">\r\n                                    &nbsp;<span class=\"new-Montserrat-Medium\" style=\"border-bottom: 1px solid #2E7D32;\">\r\n                                        Download Excel </span></a>\r\n                            </span>\r\n                        \r\n                        </div>\r\n\r\n                    </div>\r\n    \r\n                    <!-- filtes view -->\r\n                    <ng-container *ngIf=\"filterChips && filterChips.length > 0\">\r\n                        <div class=\"fyt-filter-container\">\r\n                            <mat-chip-list #chipList class=\"mt-chip-wrapper\">\r\n                                <span class=\"fyt-filtered-by-lbl\">Filtered&nbsp;By: </span>\r\n                                <mat-chip *ngFor=\"let filter of filterChips; let i = index;\" selectable=\"true\"\r\n                                    [removable]=\"!filter.nonRemovable\" (removed)=\"removeAccountsFilter(filter)\">\r\n                                    <ng-container *ngIf=\"filter.type=='select'\">\r\n                                        <ng-container *ngIf=\"filter.display\">\r\n                                            {{filter.name}} :&nbsp;{{filter.display}}\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf=\"!filter.display\">\r\n                                            {{filter.name}} :&nbsp;{{filter.value}}\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                    <ng-container *ngIf=\"filter.type=='date'\">\r\n                                        {{filter.name}} :&nbsp;{{filter.value|date:'dd MMM yyyy'}}\r\n                                    </ng-container>\r\n                                    <mat-icon matChipRemove *ngIf=\"!filter.nonRemovable\">cancel</mat-icon>\r\n                                </mat-chip>\r\n                            </mat-chip-list>\r\n                        </div>\r\n                    </ng-container>\r\n                    <!-- ./filtes view -->\r\n    \r\n                    <ng-container *ngIf=\"!(isMobile || isSmallScreen)\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-2 col-lg-1 pt-5\">\r\n                                <div class=\"fyt-pagelength-width\">\r\n                                    <mat-form-field>\r\n                                        <mat-select (selectionChange)=\"applyPageLength($event.value)\"\r\n                                            [(ngModel)]=\"pageLength\">\r\n                                            <mat-option *ngFor=\"let pagelength of pageLengths\" [value]=\"pagelength.value\">\r\n                                                {{pagelength.name}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let filter of filtersArray;let i = index;\">\r\n                                <ng-container\r\n                                    *ngIf=\"filter.type == 'select' && filter.options && filter.options.length > 0\">\r\n                                    <div class=\"col-md-2 col-lg-1 pt-5\">\r\n                                        <mat-form-field>\r\n                                            <mat-label>{{filter.name}}</mat-label>\r\n                                            <mat-select [(ngModel)]=\"postObj.filters[filter.model]\" [name]=\"filter.model\"\r\n                                                (change)=\"onChangeFilter(filter, filter.model, $event)\"\r\n                                                [multiple]=\"filter.multiple\" #filterSelect=\"ngModel\">\r\n                                                <ng-container *ngIf=\"filter.multiple\">\r\n                                                    <fyt-select-all [model]=\"filterSelect\" [values]=\"filter\">\r\n                                                    </fyt-select-all>\r\n                                                </ng-container>\r\n                                                <ng-container *ngIf=\"filter.value\">\r\n                                                    <mat-option *ngFor=\"let option of filter.options\"\r\n                                                        [value]=\"option[filter.value]\">\r\n                                                        {{ option[filter.display] }}\r\n                                                    </mat-option>\r\n                                                </ng-container>\r\n                                                <ng-container *ngIf=\"!filter.value\">\r\n                                                    <mat-option *ngFor=\"let option of filter.options\" [value]=\"option\">\r\n                                                        {{ option }}\r\n                                                    </mat-option>\r\n                                                </ng-container>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"filter.type == 'date'\">\r\n                                    <div class=\"col-md-2 col-lg-2 pt-5\">\r\n                                        <mat-form-field>\r\n                                            <mat-label>{{filter.name}}</mat-label>\r\n                                            <input matInput [matDatepicker]=\"i\" (click)=\"i.open()\"\r\n                                                [(ngModel)]=\"postObj.filters[filter.model]\"\r\n                                                [min]=\"postObj.filters[filter.min]\" [max]=\"filter.max\">\r\n                                            <mat-datepicker-toggle matSuffix [for]=\"i\"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #i></mat-datepicker>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <!-- <div class=\"col-md-2\"> <button mat-raised-button class=\"fyt-button mr-5\" (click)=\"getAttributes()\">View Columns</button>\r\n                                </div> -->\r\n                            <div class=\"col-md-6 col-lg-5 pt-5\">\r\n                                <!-- <button mat-raised-button class=\"fyt-button mr-5\" (click)=\"downloadExcel()\">Download\r\n                                    Excel</button> -->\r\n                                <button class=\"apply-button px-3\" style=\"text-transform: capitalize;\"\r\n                                    (click)=\"applyFilters()\">Apply</button> &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <button class=\"clear-all-button px-3\" style=\"text-transform: capitalize;\"\r\n                                    (click)=\"clearFilters()\">Clear</button>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!isShow\">\r\n                    <h5 class=\"fyt-heading new-Montserrat-Medium\">Select Columns</h5>\r\n                    <mat-checkbox class=\"pr-20 new-Montserrat-Medium\" *ngFor=\"let column of columns\" value=\"column.name\"\r\n                        (click)=\"onChecked(column.name)\" name=\"column.name\" [checked]=\"loader2[column.name]\">\r\n                        {{column.name | uppercase}}\r\n                    </mat-checkbox>\r\n    \r\n                    <div class=\"col-md-6\">\r\n                        <!-- <button mat-raised-button class=\"fyt-button mr-5\" (click)=\"columnStatus()\">Apply\r\n                        </button> -->\r\n                        <button class=\"apply-button px-3 mr-5\" style=\"text-transform: capitalize; \"\r\n                            (click)=\"columnStatus()\">Apply</button>\r\n                        <!-- <button mat-raised-button (click)=\"cancelColStatus()\">Cancel</button> -->\r\n                        <button class=\"clear-all-button px-3 mt-2\" style=\"text-transform: capitalize;\"\r\n                            (click)=\"cancelColStatus()\">Close</button>\r\n                    </div>\r\n                </ng-container>\r\n    \r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n    <!-- </mat-expansion-panel> -->\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <!--  -->\r\n    <mat-menu #membersMobileFilter overlapTrigger=\"false\">\r\n        <div class=\"p-5\">\r\n            <ng-container *ngFor=\"let filter of filtersArray;let i = index;\">\r\n                <ng-container *ngIf=\"filter.type == 'select' && filter.options && filter.options.length > 0\">\r\n                    <div class=\"fyt-filter-width\" (click)=\"$event.stopPropagation()\">\r\n                        <mat-form-field>\r\n                            <mat-label>{{filter.name}}</mat-label>\r\n                            <mat-select [(ngModel)]=\"postObj.filters[filter.model]\" [name]=\"filter.model\"\r\n                                (change)=\"onChangeFilter(filter, filter.model, $event)\" [multiple]=\"filter.multiple\"\r\n                                #filterSelect=\"ngModel\">\r\n                                <ng-container *ngIf=\"filter.multiple\">\r\n                                    <fyt-select-all [model]=\"filterSelect\" [values]=\"filter\"></fyt-select-all>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"filter.value\">\r\n                                    <mat-option *ngFor=\"let option of filter.options\" [value]=\"option[filter.value]\">\r\n                                        {{ option[filter.display] }}\r\n                                    </mat-option>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"!filter.value\">\r\n                                    <mat-option *ngFor=\"let option of filter.options\" [value]=\"option\">\r\n                                        {{ option }}\r\n                                    </mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"filter.type == 'date'\">\r\n                    <div class=\"fyt-filter-width\" (click)=\"$event.stopPropagation()\">\r\n                        <mat-form-field>\r\n                            <mat-label>{{filter.name}}</mat-label>\r\n                            <input matInput [matDatepicker]=\"i\" (click)=\"i.open()\"\r\n                                [(ngModel)]=\"postObj.filters[filter.model]\" [min]=\"postObj.filters[filter.min]\"\r\n                                [max]=\"filter.max\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"i\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #i></mat-datepicker>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n            <!-- <button mat-raised-button class=\"fyt-button fyt-full-screen mb-10\" (click)=\"downloadExcel()\">Download\r\n                Excel</button> -->\r\n            <!-- <button mat-raised-button class=\"fyt-button fyt-full-screen mb-10\" (click)=\"applyFilters()\">Apply\r\n                filters</button> -->\r\n    \r\n            <button class=\"apply-button px-3\" style=\"text-transform: capitalize; width: 100%;\"\r\n                (click)=\"applyFilters()\">Apply</button>\r\n            <!-- <button mat-raised-button class=\"fyt-full-screen\" (click)=\"clearFilters()\" (click)=\"$event.stopPropagation()\">Clear filters</button> -->\r\n    \r\n            <button class=\"clear-all-button px-3 mt-2\" style=\"text-transform: capitalize;width: 100%;\"\r\n                (click)=\"$event.stopPropagation()\">Clear</button>\r\n        </div>\r\n    </mat-menu>\r\n    \r\n    \r\n    <!-- <ng-container *ngIf=\"restrictionFlag\">\r\n        <div class=\"fyt-modal-design-branch animated slideInUp slow \" style=\"z-index: 3;\">\r\n            <fyt-restriction-popup [InutDataObj]=\"restrictionObj\" (onActon)=\"onCardAction($event)\">\r\n            </fyt-restriction-popup>\r\n        </div>\r\n    </ng-container> -->","import { catchError } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { GlobalApiService } from '../../../shared-modules/global-api.service';\r\nimport { AuthService } from '../../../shared-modules/services/auth.service'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataTableService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private globalApiService: GlobalApiService,\r\n    private authService: AuthService) { }\r\n\r\n       // to get All ther member as per the filters obj\r\n       getData(postObj:any): Observable<any> {\r\n        return this.http.post(this.globalApiService.getApiUrl() + '/structure/table', postObj)\r\n            .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n    }\r\n\r\n    columnsData(postObj:any):Observable<any>{\r\n        return this.http.post(this.globalApiService.getApiUrl() + '/adminUser/getColumnMapping', postObj)\r\n            .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularMaterialModule } from 'src/app/shared-modules/angular.material.module';\r\nimport { FiltersService } from './filters.service';\r\nimport { DeviceDetectorService } from 'ngx-device-detector';\r\nimport { SelectAllModule } from '../select-all/select-all.module';\r\nimport { RestrictionModule } from '../restriction/restriction.module';\r\nimport { FiltersComponent } from './filters/filters.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [FiltersComponent],\r\n  imports: [\r\n    CommonModule,    \r\n    AngularMaterialModule,\r\n    SelectAllModule, \r\n    RestrictionModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [FiltersComponent],\r\n  providers: [\r\n    FiltersService,\r\n    DeviceDetectorService],\r\n})\r\nexport class FiltersModule { }\r\n","/**\n * @license Angular v7.2.16\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nclass BrowserXhr {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RequestMethod = {\n    Get: 0,\n    Post: 1,\n    Put: 2,\n    Delete: 3,\n    Options: 4,\n    Head: 5,\n    Patch: 6,\n};\nRequestMethod[RequestMethod.Get] = 'Get';\nRequestMethod[RequestMethod.Post] = 'Post';\nRequestMethod[RequestMethod.Put] = 'Put';\nRequestMethod[RequestMethod.Delete] = 'Delete';\nRequestMethod[RequestMethod.Options] = 'Options';\nRequestMethod[RequestMethod.Head] = 'Head';\nRequestMethod[RequestMethod.Patch] = 'Patch';\n/** @enum {number} */\nconst ReadyState = {\n    Unsent: 0,\n    Open: 1,\n    HeadersReceived: 2,\n    Loading: 3,\n    Done: 4,\n    Cancelled: 5,\n};\nReadyState[ReadyState.Unsent] = 'Unsent';\nReadyState[ReadyState.Open] = 'Open';\nReadyState[ReadyState.HeadersReceived] = 'HeadersReceived';\nReadyState[ReadyState.Loading] = 'Loading';\nReadyState[ReadyState.Done] = 'Done';\nReadyState[ReadyState.Cancelled] = 'Cancelled';\n/** @enum {number} */\nconst ResponseType = {\n    Basic: 0,\n    Cors: 1,\n    Default: 2,\n    Error: 3,\n    Opaque: 4,\n};\nResponseType[ResponseType.Basic] = 'Basic';\nResponseType[ResponseType.Cors] = 'Cors';\nResponseType[ResponseType.Default] = 'Default';\nResponseType[ResponseType.Error] = 'Error';\nResponseType[ResponseType.Opaque] = 'Opaque';\n/** @enum {number} */\nconst ContentType = {\n    NONE: 0,\n    JSON: 1,\n    FORM: 2,\n    FORM_DATA: 3,\n    TEXT: 4,\n    BLOB: 5,\n    ARRAY_BUFFER: 6,\n};\nContentType[ContentType.NONE] = 'NONE';\nContentType[ContentType.JSON] = 'JSON';\nContentType[ContentType.FORM] = 'FORM';\nContentType[ContentType.FORM_DATA] = 'FORM_DATA';\nContentType[ContentType.TEXT] = 'TEXT';\nContentType[ContentType.BLOB] = 'BLOB';\nContentType[ContentType.ARRAY_BUFFER] = 'ARRAY_BUFFER';\n/** @enum {number} */\nconst ResponseContentType = {\n    Text: 0,\n    Json: 1,\n    ArrayBuffer: 2,\n    Blob: 3,\n};\nResponseContentType[ResponseContentType.Text] = 'Text';\nResponseContentType[ResponseContentType.Json] = 'Json';\nResponseContentType[ResponseContentType.ArrayBuffer] = 'ArrayBuffer';\nResponseContentType[ResponseContentType.Blob] = 'Blob';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass Headers {\n    // TODO(vicb): any -> string|string[]\n    /**\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach((values, name) => {\n                values.forEach(value => this.append(name, value));\n            });\n            return;\n        }\n        Object.keys(headers).forEach((name) => {\n            /** @type {?} */\n            const values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            this.delete(name);\n            values.forEach(value => this.append(name, value));\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    static fromResponseHeaderString(headersString) {\n        /** @type {?} */\n        const headers = new Headers();\n        headersString.split('\\n').forEach(line => {\n            /** @type {?} */\n            const index = line.indexOf(':');\n            if (index > 0) {\n                /** @type {?} */\n                const name = line.slice(0, index);\n                /** @type {?} */\n                const value = line.slice(index + 1).trim();\n                headers.set(name, value);\n            }\n        });\n        return headers;\n    }\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    append(name, value) {\n        /** @type {?} */\n        const values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    }\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    delete(name) {\n        /** @type {?} */\n        const lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this._headers.forEach((values, lcName) => fn(values, this._normalizedNames.get(lcName), this._headers));\n    }\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    get(name) {\n        /** @type {?} */\n        const values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    has(name) { return this._headers.has(name.toLowerCase()); }\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    keys() { return Array.from(this._normalizedNames.values()); }\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    set(name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    }\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    values() { return Array.from(this._headers.values()); }\n    /**\n     * Returns string of all headers.\n     * @return {?}\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    toJSON() {\n        /** @type {?} */\n        const serialized = {};\n        this._headers.forEach((values, name) => {\n            /** @type {?} */\n            const split = [];\n            values.forEach(v => split.push(...v.split(',')));\n            serialized[(/** @type {?} */ (this._normalizedNames.get(name)))] = split;\n        });\n        return serialized;\n    }\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    getAll(name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    }\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    entries() { throw new Error('\"entries\" method is not implemented on Headers class'); }\n    /**\n     * @private\n     * @param {?} name\n     * @return {?}\n     */\n    mayBeSetNormalizedName(name) {\n        /** @type {?} */\n        const lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass ResponseOptions {\n    /**\n     * @param {?=} opts\n     */\n    constructor(opts = {}) {\n        const { body, status, headers, statusText, type, url } = opts;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    merge(options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    }\n}\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass BaseResponseOptions extends ResponseOptions {\n    constructor() {\n        super({ status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() });\n    }\n}\nBaseResponseOptions.ɵfac = function BaseResponseOptions_Factory(t) { return new (t || BaseResponseOptions)(); };\nBaseResponseOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BaseResponseOptions, factory: BaseResponseOptions.ɵfac });\n/** @nocollapse */\nBaseResponseOptions.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseResponseOptions, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n * @abstract\n */\nclass ConnectionBackend {\n}\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n * @abstract\n */\nclass Connection {\n}\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n * @abstract\n */\nclass XSRFStrategy {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} method\n * @return {?}\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(`Invalid request method. The method \"${method}\" is not supported.`);\n}\n/** @type {?} */\nconst isSuccess = (status) => (status >= 200 && status < 300);\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    /** @type {?} */\n    const view = new Uint16Array(input.length);\n    for (let i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams = '') {\n    /** @type {?} */\n    const map = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)];\n            /** @type {?} */\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n *\n */\nclass QueryEncoder {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    encodeKey(key) { return standardEncoding(key); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    encodeValue(value) { return standardEncoding(value); }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass URLSearchParams {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    constructor(rawParams = '', queryEncoder = new QueryEncoder()) {\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    clone() {\n        /** @type {?} */\n        const clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    has(param) { return this.paramsMap.has(param); }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    get(param) {\n        /** @type {?} */\n        const storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    getAll(param) { return this.paramsMap.get(param) || []; }\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    set(param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        /** @type {?} */\n        const list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    }\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    setAll(searchParams) {\n        searchParams.paramsMap.forEach((value, param) => {\n            /** @type {?} */\n            const list = this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            this.paramsMap.set(param, list);\n        });\n    }\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    append(param, val) {\n        if (val === void 0 || val === null)\n            return;\n        /** @type {?} */\n        const list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    }\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    appendAll(searchParams) {\n        searchParams.paramsMap.forEach((value, param) => {\n            /** @type {?} */\n            const list = this.paramsMap.get(param) || [];\n            for (let i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            this.paramsMap.set(param, list);\n        });\n    }\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    replaceAll(searchParams) {\n        searchParams.paramsMap.forEach((value, param) => {\n            /** @type {?} */\n            const list = this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (let i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            this.paramsMap.set(param, list);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const paramsList = [];\n        this.paramsMap.forEach((values, k) => {\n            values.forEach(v => paramsList.push(this.queryEncoder.encodeKey(k) + '=' + this.queryEncoder.encodeValue(v)));\n        });\n        return paramsList.join('&');\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    delete(param) { this.paramsMap.delete(param); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nclass Body {\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    json() {\n        if (typeof this._body === 'string') {\n            return JSON.parse((/** @type {?} */ (this._body)));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    }\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    text(encodingHint = 'legacy') {\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array((/** @type {?} */ (this._body))));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array((/** @type {?} */ (this._body))));\n                default:\n                    throw new Error(`Invalid value for encodingHint: ${encodingHint}`);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    }\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    arrayBuffer() {\n        if (this._body instanceof ArrayBuffer) {\n            return (/** @type {?} */ (this._body));\n        }\n        return stringToArrayBuffer(this.text());\n    }\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    blob() {\n        if (this._body instanceof Blob) {\n            return (/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass Response extends Body {\n    /**\n     * @param {?} responseOptions\n     */\n    constructor(responseOptions) {\n        super();\n        this._body = responseOptions.body;\n        this.status = (/** @type {?} */ (responseOptions.status));\n        this.ok = (this.status >= 200 && this.status <= 299);\n        this.statusText = responseOptions.statusText;\n        this.headers = responseOptions.headers;\n        this.type = (/** @type {?} */ (responseOptions.type));\n        this.url = (/** @type {?} */ (responseOptions.url));\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `Response with status: ${this.status} ${this.statusText} for URL: ${this.url}`;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet _nextRequestId = 0;\n/** @type {?} */\nconst JSONP_HOME = '__ng_jsonp__';\n/** @type {?} */\nlet _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    /** @type {?} */\n    const w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nclass BrowserJsonp {\n    // Construct a <script> element with the specified URL\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    build(url) {\n        /** @type {?} */\n        const node = document.createElement('script');\n        node.src = url;\n        return node;\n    }\n    /**\n     * @return {?}\n     */\n    nextRequestID() { return `__req${_nextRequestId++}`; }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    requestCallback(id) { return `${JSONP_HOME}.${id}.finished`; }\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    exposeConnection(id, connection) {\n        /** @type {?} */\n        const connections = _getJsonpConnections();\n        connections[id] = connection;\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    removeConnection(id) {\n        /** @type {?} */\n        const connections = _getJsonpConnections();\n        connections[id] = null;\n    }\n    // Attach the <script> element to the DOM\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    send(node) { document.body.appendChild((/** @type {?} */ ((node)))); }\n    // Remove <script> element from the DOM\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    cleanup(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((/** @type {?} */ ((node))));\n        }\n    }\n}\nBrowserJsonp.ɵfac = function BrowserJsonp_Factory(t) { return new (t || BrowserJsonp)(); };\nBrowserJsonp.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserJsonp, factory: BrowserJsonp.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserJsonp, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass JSONPConnection {\n    /**\n     * \\@internal\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    constructor(req, _dom, baseResponseOptions) {\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable((responseObserver) => {\n            this.readyState = ReadyState.Loading;\n            /** @type {?} */\n            const id = this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            /** @type {?} */\n            const callback = _dom.requestCallback(this._id);\n            /** @type {?} */\n            let url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', `=${callback}&`);\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n            }\n            /** @type {?} */\n            const script = this._script = _dom.build(url);\n            /** @type {?} */\n            const onLoad = (event) => {\n                if (this.readyState === ReadyState.Cancelled)\n                    return;\n                this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!this._finished) {\n                    /** @type {?} */\n                    let responseOptions = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url });\n                    if (baseResponseOptions) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.error(new Response(responseOptions));\n                    return;\n                }\n                /** @type {?} */\n                let responseOptions = new ResponseOptions({ body: this._responseData, url });\n                if (this.baseResponseOptions) {\n                    responseOptions = this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            /** @type {?} */\n            const onError = (error) => {\n                if (this.readyState === ReadyState.Cancelled)\n                    return;\n                this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                /** @type {?} */\n                let responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return () => {\n                this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @param {?=} data\n     * @return {?}\n     */\n    finished(data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    }\n}\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass JSONPBackend extends ConnectionBackend {\n    /**\n     * \\@internal\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    constructor(_browserJSONP, _baseResponseOptions) {\n        super();\n        this._browserJSONP = _browserJSONP;\n        this._baseResponseOptions = _baseResponseOptions;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    createConnection(request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    }\n}\nJSONPBackend.ɵfac = function JSONPBackend_Factory(t) { return new (t || JSONPBackend)(ɵngcc0.ɵɵinject(BrowserJsonp), ɵngcc0.ɵɵinject(ResponseOptions)); };\nJSONPBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JSONPBackend, factory: JSONPBackend.ɵfac });\n/** @nocollapse */\nJSONPBackend.ctorParameters = () => [\n    { type: BrowserJsonp },\n    { type: ResponseOptions }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JSONPBackend, [{\n        type: Injectable\n    }], function () { return [{ type: BrowserJsonp }, { type: ResponseOptions }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass XHRConnection {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    constructor(req, browserXHR, baseResponseOptions) {\n        this.request = req;\n        this.response = new Observable((responseObserver) => {\n            /** @type {?} */\n            const _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            /** @type {?} */\n            const onLoad = () => {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                /** @type {?} */\n                let status = _xhr.status === 1223 ? 204 : _xhr.status;\n                /** @type {?} */\n                let body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                /** @type {?} */\n                const headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                /** @type {?} */\n                const url = getResponseURL(_xhr) || req.url;\n                /** @type {?} */\n                const statusText = _xhr.statusText || 'OK';\n                /** @type {?} */\n                let responseOptions = new ResponseOptions({ body, status, headers, statusText, url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                /** @type {?} */\n                const response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            /** @type {?} */\n            const onError = (err) => {\n                /** @type {?} */\n                let responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach((values, name) => _xhr.setRequestHeader((/** @type {?} */ (name)), values.join(',')));\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(this.request.getBody());\n            return () => {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    setDetectedContentType(req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                /** @type {?} */\n                const blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    }\n}\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass CookieXSRFStrategy {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    constructor(_cookieName = 'XSRF-TOKEN', _headerName = 'X-XSRF-TOKEN') {\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    configureRequest(req) {\n        /** @type {?} */\n        const xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    }\n}\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass XHRBackend {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    constructor(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    createConnection(request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    }\n}\nXHRBackend.ɵfac = function XHRBackend_Factory(t) { return new (t || XHRBackend)(ɵngcc0.ɵɵinject(BrowserXhr), ɵngcc0.ɵɵinject(ResponseOptions), ɵngcc0.ɵɵinject(XSRFStrategy)); };\nXHRBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: XHRBackend, factory: XHRBackend.ɵfac });\n/** @nocollapse */\nXHRBackend.ctorParameters = () => [\n    { type: BrowserXhr },\n    { type: ResponseOptions },\n    { type: XSRFStrategy }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(XHRBackend, [{\n        type: Injectable\n    }], function () { return [{ type: BrowserXhr }, { type: ResponseOptions }, { type: XSRFStrategy }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass RequestOptions {\n    /**\n     * @deprecated from 4.0.0. Use params instead.\n     * @return {?}\n     */\n    get search() { return this.params; }\n    /**\n     * @deprecated from 4.0.0. Use params instead.\n     * @param {?} params\n     * @return {?}\n     */\n    set search(params) { this.params = params; }\n    // TODO(Dzmitry): remove search when this.search is removed\n    /**\n     * @param {?=} opts\n     */\n    constructor(opts = {}) {\n        const { method, headers, body, url, search, params, withCredentials, responseType } = opts;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    merge(options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    }\n    /**\n     * @private\n     * @param {?=} params\n     * @return {?}\n     */\n    _mergeSearchParams(params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    }\n    /**\n     * @private\n     * @param {?=} objParams\n     * @return {?}\n     */\n    _parseParams(objParams = {}) {\n        /** @type {?} */\n        const params = new URLSearchParams();\n        Object.keys(objParams).forEach((key) => {\n            /** @type {?} */\n            const value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach((item) => this._appendParam(key, item, params));\n            }\n            else {\n                this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    _appendParam(key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    }\n}\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass BaseRequestOptions extends RequestOptions {\n    constructor() { super({ method: RequestMethod.Get, headers: new Headers() }); }\n}\nBaseRequestOptions.ɵfac = function BaseRequestOptions_Factory(t) { return new (t || BaseRequestOptions)(); };\nBaseRequestOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BaseRequestOptions, factory: BaseRequestOptions.ɵfac });\n/** @nocollapse */\nBaseRequestOptions.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRequestOptions, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass Request extends Body {\n    /**\n     * @param {?} requestOptions\n     */\n    constructor(requestOptions) {\n        super();\n        // TODO: assert that url is present\n        /** @type {?} */\n        const url = requestOptions.url;\n        this.url = (/** @type {?} */ (requestOptions.url));\n        /** @type {?} */\n        const paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            /** @type {?} */\n            let params;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                /** @type {?} */\n                let prefix = '?';\n                if (this.url.indexOf('?') != -1) {\n                    prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                this.url = url + prefix + params;\n            }\n        }\n        this._body = requestOptions.body;\n        this.method = normalizeMethodName((/** @type {?} */ (requestOptions.method)));\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        this.headers = new Headers(requestOptions.headers);\n        this.contentType = this.detectContentType();\n        this.withCredentials = (/** @type {?} */ (requestOptions.withCredentials));\n        this.responseType = (/** @type {?} */ (requestOptions.responseType));\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    detectContentType() {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    }\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    detectContentTypeFromBody() {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    }\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    getBody() {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    }\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params) {\n    /** @type {?} */\n    const searchParams = new URLSearchParams();\n    Object.keys(params).forEach(key => {\n        /** @type {?} */\n        const value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(element => searchParams.append(key, element.toString()));\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\n/** @type {?} */\nconst noop = function () { };\n/** @type {?} */\nconst w = typeof window == 'object' ? window : noop;\n/** @type {?} */\nconst FormData = ((/** @type {?} */ (w)))['FormData'] || noop;\n/** @type {?} */\nconst Blob$1 = ((/** @type {?} */ (w)))['Blob'] || noop;\n/** @type {?} */\nconst ArrayBuffer$1 = ((/** @type {?} */ (w)))['ArrayBuffer'] || noop;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    /** @type {?} */\n    const newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return (/** @type {?} */ (newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }))));\n    }\n    return (/** @type {?} */ (newOptions.merge(new RequestOptions({ method, url }))));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass Http {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    constructor(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(url, options) {\n        /** @type {?} */\n        let responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, (/** @type {?} */ (url)))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    }\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    }\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    }\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    }\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    delete(url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    }\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    }\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    }\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    }\n}\nHttp.ɵfac = function Http_Factory(t) { return new (t || Http)(ɵngcc0.ɵɵinject(ConnectionBackend), ɵngcc0.ɵɵinject(RequestOptions)); };\nHttp.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Http, factory: Http.ɵfac });\n/** @nocollapse */\nHttp.ctorParameters = () => [\n    { type: ConnectionBackend },\n    { type: RequestOptions }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Http, [{\n        type: Injectable\n    }], function () { return [{ type: ConnectionBackend }, { type: RequestOptions }]; }, null); })();\n/**\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass Jsonp extends Http {\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    constructor(backend, defaultOptions) {\n        super(backend, defaultOptions);\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(url, options) {\n        /** @type {?} */\n        let responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, (/** @type {?} */ (url))));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    }\n}\nJsonp.ɵfac = function Jsonp_Factory(t) { return new (t || Jsonp)(ɵngcc0.ɵɵinject(ConnectionBackend), ɵngcc0.ɵɵinject(RequestOptions)); };\nJsonp.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Jsonp, factory: Jsonp.ɵfac });\n/** @nocollapse */\nJsonp.ctorParameters = () => [\n    { type: ConnectionBackend },\n    { type: RequestOptions }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Jsonp, [{\n        type: Injectable\n    }], function () { return [{ type: ConnectionBackend }, { type: RequestOptions }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n */\nclass HttpModule {\n}\nHttpModule.ɵfac = function HttpModule_Factory(t) { return new (t || HttpModule)(); };\nHttpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpModule });\nHttpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n        BrowserXhr,\n        { provide: RequestOptions, useClass: BaseRequestOptions },\n        { provide: ResponseOptions, useClass: BaseResponseOptions },\n        XHRBackend,\n        { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n    ] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HttpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ]\n            }]\n    }], null, null); })();\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated see https://angular.io/api/common/http/HttpClient#jsonp\n * \\@publicApi\n */\nclass JsonpModule {\n}\nJsonpModule.ɵfac = function JsonpModule_Factory(t) { return new (t || JsonpModule)(); };\nJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: JsonpModule });\nJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n        BrowserJsonp,\n        { provide: RequestOptions, useClass: BaseRequestOptions },\n        { provide: ResponseOptions, useClass: BaseResponseOptions },\n        JSONPBackend,\n    ] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JsonpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    JSONPBackend,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @deprecated see https://angular.io/guide/http\n * \\@publicApi\n * @type {?}\n */\nconst VERSION = new Version('7.2.16');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n\n//# sourceMappingURL=http.js.map","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'dataFormatter' })\r\nexport class DataFormatter implements PipeTransform {\r\n  transform(key: any, record: any, column: any): any {\r\n    let dataObj = JSON.parse(JSON.stringify(record));\r\n    if (column) {\r\n      const dbProp = column.split('.');\r\n      try {\r\n        for (let k = 0; k < dbProp.length - 1; k++) {\r\n          dataObj = dataObj[dbProp[k]];\r\n        }\r\n        const value = dataObj[dbProp[dbProp.length - 1]];\r\n        return value;\r\n      } catch (error) {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n}"],"sourceRoot":"webpack:///"}