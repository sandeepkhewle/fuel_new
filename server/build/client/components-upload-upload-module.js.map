{"version":3,"sources":["./src/app/components/upload/upload-routing.module.ts","./src/app/components/upload/upload.module.ts","./src/app/components/upload/upload.service.ts","./src/app/components/upload/upload/upload.component.html","./src/app/components/upload/upload/upload.component.ts"],"names":[],"mappings":"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","file":"components-upload-upload-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UploadComponent } from './upload/upload.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component:UploadComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UploadRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UploadRoutingModule } from './upload-routing.module';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { AngularMaterialModule } from 'src/app/shared-modules/angular.material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UploadComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UploadRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class UploadModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { GlobalApiService } from 'src/app/shared-modules/global-api.service';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private globalApiService: GlobalApiService,\r\n    private authService: AuthService\r\n    ) { }\r\n\r\n  getExcel(postObj:any): Observable<any> {\r\n    const formData: FormData = new FormData();\r\n    if (postObj.file) {\r\n      formData.append('file', postObj.file, postObj.file.name);\r\n    }\r\n    formData.append('data', JSON.stringify(postObj));\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/branch/importExcel', formData)\r\n      .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n}\r\n","<!-- {\r\n  \"name\": \"Upload Excel\",\r\n  \"uniqueName\": \"upload\",\r\n  \"url\": \"/trends/upload\",\r\n  \"icon\": \"upload.png\",\r\n  \"titleClass\": \"\"\r\n}, -->\r\n<ng-container *ngIf=\"loader\">\r\n    <div class=\"fyt-spinner-container\">\r\n      <mat-spinner></mat-spinner>\r\n      <div class=\"text-center fyt-loading-msg\">Please wait</div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container>\r\n    <div class=\"row pt-50\">\r\n      <div class=\"col-md-12\">\r\n        <ng-container *ngIf=\"loader2\">\r\n          <div class=\"fyt-upload-btn-wrapper\" matTooltip=\"Drag and drop Excel file here\">\r\n            <div class=\"upload-button-custom\" for=\"userId\">\r\n              <button mat-button>\r\n                <i class=\"material-icons\">file_copy</i>\r\n                <p class=\"p-text\">Click here or drag and drop an excel file here</p>\r\n              </button>\r\n            </div>\r\n            <input required type=\"file\" name=\"userprofile\" id=\"userId\" class=\"fyt-upload-input\" ngFileSelect\r\n              (change)=\"fileUpload($event)\" accept=\".xlsx,.xlsm,.xls,.xlts,.xltm\" />\r\n          </div><br><br>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div class=\"col-md-8 offset-md-2\">\r\n        <ng-container *ngIf=\"!loader2\">\r\n          <div class=\"fyt-login-logo-container row\">\r\n            <div class=\"col-md-5\">\r\n              <img src=\"../../../../assets/img/Excel.png\" width=\"100%\" alt=\"FYTRACK\">\r\n            </div>\r\n            <div class=\"col-md-1 pl-0\">\r\n              <button type=\"button\" mat-icon-button (click)=\"clearFile()\">\r\n                <mat-icon>clear</mat-icon>\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <p>The file '{{uploadExcel.file.name}}' is loaded successfully.</p>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"ta-c\">\r\n    <button mat-flat-button color=\"primary\" (click)=\"uploadExcelFile()\" [disabled]=\"loader2\">Upload Excel</button>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UploadService } from '../upload.service';\r\n\r\n@Component({\r\n  selector: 'trends-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n  loader:boolean = false;\r\n  uploadExcelObj: any = {};\r\n  uploadExcel: any = {};\r\n  loader2: boolean = true;\r\n  excelObj: any = {};\r\n\r\n  constructor(\r\n    public snackBar: MatSnackBar,\r\n    public uploadService: UploadService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n  fileUpload(event:any) {\r\n    // const target: HTMLInputElement = event.target;\r\n    const target: any = event.target;\r\n    if (target.files.length === 0) {\r\n      throw new Error('Not Uploaded');\r\n    }\r\n    if (target.files.length > 1) {\r\n      throw new Error('cannot use multiple files');\r\n    }\r\n    this.excelObj = event.target.files.item(0);\r\n    // console.log(\"sheet\", this.excelObj);\r\n    let fileType = this.excelObj;\r\n    if (fileType && fileType.name) {\r\n      fileType = fileType.name.toString().toLowerCase();\r\n      fileType = fileType.split('.');\r\n      const type = fileType;\r\n      if (type && type.length > 0 &&\r\n        (type[type.length - 1] === 'xlsx' ||\r\n          type[type.length - 1] === 'xlsm' ||\r\n          type[type.length - 1] === 'xls' ||\r\n          type[type.length - 1] === 'xlts' ||\r\n          type[type.length - 1] === 'xltm')) {\r\n        this.uploadExcel.file = event.target.files.item(0);\r\n        // console.log(\"newsheet\", this.uploadExcel);\r\n\r\n        this.loader2 = false;\r\n      } else {\r\n        // console.log('file format not supported');\r\n        this.showErrorMessage(`Sorry, \r\n        '${event.target.files.item(0).name}' \r\n        is invalid, allowed extensions are: (.xlsx, .xlsm, .xls, xlts, xltm) files`, 'Got it!');\r\n      }\r\n    }\r\n  }\r\n\r\n  showErrorMessage(msg1:any, msg2:any) {\r\n    this.snackBar.open(msg1, msg2, { duration: 6000 });\r\n  }\r\n\r\n\r\n  \r\n  uploadExcelFile() {\r\n    this.loader = true;\r\n    this.uploadExcelObj.file = this.uploadExcel.file;\r\n    // console.log(\"this.uploadExcelObj\", this.uploadExcelObj);\r\n\r\n    this.uploadService.getExcel(this.uploadExcelObj).subscribe(res => {\r\n      if (res.statusCode == '001') {\r\n        delete this.uploadExcel.file;\r\n        delete this.uploadExcelObj.file;\r\n        this.loader2 = true;\r\n        this.loader = false;\r\n        this.snackBar.open(res.Message, 'Got it!');\r\n      } else {\r\n        this.snackBar.open(res.Message, 'Got it!');\r\n        this.loader = false;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  clearFile() {\r\n    delete this.uploadExcel.file;\r\n    delete this.uploadExcelObj.file;\r\n    this.loader2 = true;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}