{"version":3,"sources":["./src/app/components/notifications/notifications/notifications.component.html","./src/app/components/notifications/notifications/notifications.component.ts","./src/app/components/notifications/send-notifications/send-notifications.component.ts","./src/app/components/notifications/send-notifications/send-notifications.component.html","./src/app/components/notifications/notifications.service.ts","./src/app/components/notifications/notifications.module.ts","./src/app/components/notifications/notifications-routing.module.ts"],"names":[],"mappings":"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","file":"components-notifications-notifications-module.js","sourcesContent":["<div class=\"row new-white-bg py-3\">\r\n    <div class=\"col-md-4 col-lg-3 py-1 ta-c \">\r\n        <button type=\"button\" class=\"ta-c new-tab-head-invoice\">\r\n            <!-- <img src=\"../../../../assets/icons/sidenavIcons/enquiry1.png\" width=\"18px\" style=\"margin-top: -3px;\"\r\n                alt=\"\">&nbsp; -->\r\n                NOTIFICATIONS</button>\r\n    </div>\r\n    <div class=\"col-md-4 col-lg-3 py-1 ta-c \">\r\n        \r\n    </div>\r\n    <div class=\"col-md-4 col-lg-6 pl-0 ml-0 ta-c\">\r\n        <ng-container>\r\n            <button type=\"button\" mat-raised-button class=\"fr-side   new-tab-side-enquiry\" (click)=\"addNotifications()\">ADD NOTIFICATIONS</button>\r\n        </ng-container>\r\n\r\n    </div>\r\n\r\n</div>\r\n<div class=\"row\" style=\"margin-top: -17px;\">\r\n    <div class=\"col-md-4 col-lg-3 ta-c\">\r\n        <ng-container>\r\n            <img src=\"../../../../assets/img/down-triangle.png\" width=\"30px\" alt=\"\">\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"col-md-4 col-lg-3 ta-c\">\r\n        \r\n    </div>\r\n    <div class=\"col-md-4 col-lg-3\">\r\n    </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"sendSmsFlag\">\r\n    <div class=\"row animated slideInDown fast pl-0 pr-0 ml-0 mr-0 mb-10\">\r\n        <div class=\"col-md-12 pl-0 pr-0 ml-0 mr-0\">\r\n        <trends-send-notifications [sendCommunicationContact]=\"commObjToSend\" (onActon)=\"onCardAction($event)\"></trends-send-notifications>\r\n    </div>\r\n    </div>\r\n</ng-container>\r\n\r\n<div class=\"row new-white-bg py-3\">\r\n    <div class=\"col-md-12 pl-0 pr-0 ml-0 mr-0\">\r\n        <ng-container >\r\n            <ng-container *ngIf=\"postObj.page\">\r\n                <trends-datatable class=\"mt-0 mb-0 pt-0 pb-0\" [postObj]=\"postObj\" (onSelectRows)=\"onRowsSelected($event)\"\r\n                    (onRowClickEvent)=\"onRowClick($event)\" (onActonModal)=\"onModalAction($event)\">\r\n                </trends-datatable>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationsService } from '../notifications.service';\r\n\r\n@Component({\r\n  selector: 'trends-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n  postObj:any={\r\n    page :'notifications'\r\n  }\r\n  sendSmsFlag:boolean = false;\r\n  commObjToSend:any={};\r\n  constructor(\r\n    public notificationsService:NotificationsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.applyFilters();\r\n  }\r\n\r\n  applyFilters() {\r\n    this.postObj = Object.assign({}, this.postObj)\r\n  }\r\n\r\n  \r\n  onRowsSelected(event:any){\r\n\r\n  }\r\n\r\n  onRowsSelectedSub(event:any){\r\n\r\n  }\r\n\r\n  onRowClick(event:any){\r\n\r\n  }\r\n\r\n  onModalAction(event:any){\r\n\r\n  }\r\n\r\n  addNotifications(){\r\n    this.sendSmsFlag = true;\r\n  }\r\n\r\n  onCardAction($event:any) {\r\n      this.sendSmsFlag = false;      \r\n      this.postObj={\r\n        page :'notifications'\r\n      }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, OnChanges, Output } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { NotificationsService } from '../notifications.service';\r\n\r\n@Component({\r\n  selector: 'trends-send-notifications',\r\n  templateUrl: './send-notifications.component.html',\r\n  styleUrls: ['./send-notifications.component.css']\r\n})\r\nexport class SendNotificationsComponent implements OnInit, OnChanges {\r\n  @Input() sendCommunicationContact: any;\r\n  @Output() onActon = new EventEmitter<any>()\r\n  commObj: any = {};\r\n  successMsg: any;\r\n  overCharCount: any = 160;\r\n  usedFlag: boolean = false;\r\n\r\n  descriptionLength: any;\r\n  calculateSMSCount: any;\r\n  totalMsgSentCount: any;\r\n  appIdArray: any = [\r\n    {\r\n      \"name\": \"MS-HSD\",\r\n      \"value\": \"msd\"\r\n    },\r\n    {\r\n      \"name\": \"LPG\",\r\n      \"value\": \"lpg\"\r\n    },\r\n    {\r\n      \"name\": \"BITUMEN\",\r\n      \"value\": \"bitumen\"\r\n    }\r\n  ];\r\n  commCategory: any = [\r\n    { catName: 'All Members', id: 1 },\r\n    { catName: 'Active Members', id: 2 },\r\n    { catName: 'Inactive Members', id: 3 }\r\n  ];\r\n\r\n  constructor(\r\n    private notificationsService: NotificationsService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  ngOnChanges() { }\r\n\r\n  smsLengthFun() {\r\n\r\n    this.descriptionLength = 0;\r\n    this.calculateSMSCount = 0;\r\n    this.totalMsgSentCount = 0;\r\n    this.overCharCount = 160;\r\n    this.usedFlag = true;\r\n\r\n    this.descriptionLength = this.commObj.message.length;\r\n    if (this.descriptionLength >= 160) {\r\n      this.calculateSMSCount = Math.floor(this.descriptionLength / 160);\r\n      if ((this.descriptionLength % 160) > 0) {\r\n        this.calculateSMSCount = this.calculateSMSCount + 1;\r\n      }\r\n      this.totalMsgSentCount = this.calculateSMSCount;\r\n      this.overCharCount = 160 * (this.calculateSMSCount - 1);\r\n\r\n      // this.totalMsgSentCount = this.calculateSMSCount * this.memberCount;\r\n      // this.overCharCount = 160 * (this.calculateSMSCount-1);\r\n    } else {\r\n      this.calculateSMSCount = 1;\r\n      // if (this.memberCount != 0) {\r\n      this.totalMsgSentCount = this.calculateSMSCount;\r\n      // this.totalMsgSentCount = this.calculateSMSCount * this.memberCount;\r\n      // }else if(this.memberCount == 0){\r\n      //   this.totalMsgSentCount = 0;\r\n      // }\r\n\r\n    }\r\n  }\r\n\r\n  sendMessage() {\r\n    this.commObj.data = {};\r\n    this.notificationsService.sendNotificationMsg(this.commObj).subscribe(res => {\r\n      if (res.status == 'Success') {\r\n        this.closeForm(false);\r\n      }\r\n      else {\r\n      }\r\n    });\r\n  }\r\n\r\n  closeForm(flag: boolean) {\r\n    this.onActon.emit({ flag: flag, page: 'communication' });\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-header class=\"ta-c\">\r\n        <div class=\"row pl-0 pr-0 ml-0 mr-0 pb-20\" style=\"width: 100%;\">\r\n            <div class=\"col-md-10 ta-c enquiry-header new-Montserrat-Medium\">\r\n                <h4>SEND NOTIFICATIONS</h4>\r\n            </div>\r\n\r\n            <div class=\"col-md-2 fr pl-0 pr-0 ml-0 mr-0\" style=\"margin-top: 15px;\">\r\n                <span class=\"new-Montserrat-Medium fyt-link-btn new-808080\" (click)=\"closeForm(false)\"> <span style=\"border-bottom: 1px solid #808080;\">Close &nbsp;x</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"alert alert-success\" *ngIf=\"successMsg\">\r\n                        <span>{{successMsg}}</span>\r\n                    </div>\r\n                </div>\r\n                <form #communicationForm=\"ngForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>App Name</mat-label>\r\n                                <mat-select name=\"appId\" [(ngModel)]=\"commObj.appId\">\r\n                                    <mat-option *ngFor=\"let app1 of appIdArray\" [value]=\"app1.value\">{{app1.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>Title</mat-label>\r\n                                <input matInput required name=\"title\" [(ngModel)]=\"commObj.title\" id=\"title\" #title=\"ngModel\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <mat-form-field appearance=\"outline\" >\r\n                                <mat-label>Category</mat-label>\r\n                                <mat-select name=\"catName\" [(ngModel)]=\"commObj.catName\"  required>\r\n                                    <mat-option *ngFor=\"let cat of commCategory\" [value]=\"cat.catName\">{{cat.catName}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>Message</mat-label>\r\n                                <textarea matInput name=\"message\" [(ngModel)]=\"commObj.message\" (keyup)=\"smsLengthFun()\"></textarea>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n\r\n                        <ng-container *ngIf=\"usedFlag\">\r\n                            <div class=\"col-md-12 py-1\">\r\n                                <mat-card>\r\n                                    <span>Total characters <b>{{descriptionLength}}</b></span>\r\n\r\n                                    <!-- <span>You have used <b>{{descriptionLength}}</b> characters</span><br>\r\n                                    <span>Messages over {{overCharCount}} characters will be sent as <b>{{calculateSMSCount}}</b> SMS.</span><br>\r\n                                    <span>Total Number of SMS will send  <b>{{totalMsgSentCount}}</b></span> -->\r\n                                </mat-card>\r\n                            </div>\r\n                        </ng-container>\r\n\r\n<!-- \r\n                        <div class=\"col-md-12 py-1\">\r\n                            <mat-card style=\"background-color: green;color: white;\">\r\n                                <span>Total SMS Left - <b>{{smsCount}}</b></span>\r\n                                <span style=\"float: right;\">\r\n                                   <ng-container *ngIf=\"pageName == 'Enquiry'\">Enquiry - <b>{{memberCount}}</b></ng-container><ng-container *ngIf=\"pageName == 'member'\">Member - <b>{{memberCount}}</b></ng-container></span>\r\n                            </mat-card>\r\n                        </div>\r\n                        <ng-container *ngIf=\"usedFlag\">\r\n                            <div class=\"col-md-12 py-1\">\r\n                                <mat-card>\r\n                                    <span>You have used <b>{{descriptionLength}}</b> characters</span><br>\r\n                                    <span>Messages over {{overCharCount}} characters will be sent as <b>{{calculateSMSCount}}</b> SMS.</span><br>\r\n                                    <span>Total Number of SMS will send  <b>{{totalMsgSentCount}}</b></span>\r\n                                </mat-card>\r\n                            </div>\r\n                        </ng-container> -->\r\n\r\n                        <!-- <ng-container *ngIf=\"suffBalanceFlag\">\r\n                            <div class=\"col-md-12 py-1\">\r\n                                <mat-card style=\"background-color: red;color: white;\">\r\n                                    <span>You do not have sufficient SMS balance please contact <b>Fyteack Team</b></span>\r\n                                </mat-card>\r\n                            </div>\r\n                        </ng-container> -->\r\n                        <!-- <ng-container *ngIf=\"memberListData\">\r\n                            <div class=\"col-md-12 mt-1 mb-3\">\r\n                                <mat-expansion-panel>\r\n                                    <mat-expansion-panel-header class=\"web-page-color\">\r\n                                        <mat-panel-title>\r\n                                            <span>SMS will be sent to {{memberCount}} members &nbsp;(<small>Click here\r\n                                                    to\r\n                                                    check</small>)</span>\r\n                                        </mat-panel-title>\r\n                                    </mat-expansion-panel-header>\r\n                                    <mat-panel-description>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-borderless fyt-content-loader\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th scope=\"col\">MEMBER</th>\r\n                                                            <th scope=\"col\">CONTACT NO</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let mem of memberListData; let i = index\">\r\n                                                            <td>{{mem.fullName}}</td>\r\n                                                            <td>{{mem.phoneNo}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </mat-panel-description>\r\n                                </mat-expansion-panel>\r\n                            </div>\r\n                        </ng-container> -->\r\n                        <ng-container >\r\n                            <div class=\"col-md-12 ta-c pb-20\">\r\n                                <button class=\"new-btn-8CC63F-popup px-5 py-1\" [disabled]=\"communicationForm.invalid\" (click)=\"sendMessage()\">SEND</button>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { GlobalApiService } from 'src/app/shared-modules/global-api.service';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private globalApiService: GlobalApiService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  sendNotificationMsg(postObj:any):Observable<any>{\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/admin/sendNotification', postObj)\r\n        .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NotificationsRoutingModule } from './notifications-routing.module';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { NotificationsService } from './notifications.service';\r\nimport { AngularMaterialModule } from 'src/app/shared-modules/angular.material.module';\r\nimport { DatatableModule } from '../generic-modules/generic-table/datatable.module';\r\nimport { SendNotificationsComponent } from './send-notifications/send-notifications.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotificationsComponent,\r\n    SendNotificationsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NotificationsRoutingModule,\r\n    AngularMaterialModule,\r\n    DatatableModule\r\n  ],\r\n  providers:[\r\n    AuthService,\r\n    NotificationsService\r\n  ],\r\n  exports:[SendNotificationsComponent]\r\n})\r\nexport class NotificationsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', component:NotificationsComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NotificationsRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}