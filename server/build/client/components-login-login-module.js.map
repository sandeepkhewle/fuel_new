{"version":3,"sources":["./src/app/components/login/login/login.component.html","./src/app/components/login/login/login.component.ts","./src/app/components/login/login-routing.module.ts","./src/app/components/login/login.service.ts","./src/app/components/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBoB,wEAAmC;IAC/B,wEAAoD;IAAA,uDAAgB;IAAA,4DAAI;IAC5E,qEAAe;;;IADyC,0DAAgB;IAAhB,oFAAgB;;ACZrF,MAAM,cAAc;IASzB,YACU,YAA0B,EAC1B,WAAwB,EACxB,MAAc,EACf,SAAuB,EACtB,YAA6B;QAJ7B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACf,cAAS,GAAT,SAAS,CAAc;QACtB,iBAAY,GAAZ,YAAY,CAAiB;QAbvC,aAAQ,GAAQ,EAAE,CAAC;QACnB,YAAO,GAAG,iCAAiC,CAAC;QAE5C,aAAQ,GAAW,EAAE,CAAC;QACtB,gBAAW,GAAY,KAAK,CAAC;QAC7B,YAAO,GAAW,CAAC,CAAC;QACpB,cAAS,GAAY,KAAK,CAAC;QASzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,gCAAgC;QAChC,qBAAqB;QACrB,yFAAyF;QACzF,gCAAgC;QAChC,qBAAqB;QACrB,yFAAyF;IAC1F,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzD,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC3B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrD,yBAAyB;gBACzB,qEAAqE;gBACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;aAC3C;iBACI;gBACH,IAAI,GAAG,CAAC,UAAU,IAAI,KAAK,EAAE;oBAC3B,IAAI,CAAC,YAAY,GAAG,qCAAqC;iBAC1D;aACF;YACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3C,CAAC;;4EAlDU,cAAc;8FAAd,cAAc;QDb3B,yEAAiB;QACb,yEAAiC;QAC7B,yEAAiD;QAC7C,yEAAkB;QAEd,wEAAmF;QAAA,yEAAc;QAAA,4DAAK;QAC1G,4DAAM;QACV,4DAAM;QACN,2EAAU;QACN,iFAAgB;QAAA,iEAAM;QAAA,gEAAI;QACtB,wEAAkB;QAAA,8FAAkC;QAAA,4DAAI;QAC5D,4DAAiB;QACjB,oFAAkB;QACd,8EAA+C;QAArB,2IAAY,WAAO,IAAC;QAC1C,qFAAqC;QACjC,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QAEpC,4EAA0G;QAA/B,6LAA8B;QAAzG,4DAA0G;QAC9G,4DAAiB;QACjB,qFAAqC;QACjC,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAE/B,6EAAgH;QAAhC,8LAA+B;QAA/G,4DAAgH;QACpH,4DAAiB;QACjB,+HAEe;QACf,2EAA8B;QAE1B,uEAAwB;QAE5B,4DAAM;QACN,8EAAsI;QAAA,wDAAY;QAAA,4DAAS;QAC/J,4DAAO;QAEX,4DAAmB;QACvB,4DAAW;QACf,4DAAM;QACV,4DAAM;;;QArB6F,2DAA8B;QAA9B,yFAA8B;QAKzB,0DAA+B;QAA/B,0FAA+B;QAEpG,0DAAkB;QAAlB,kFAAkB;QAQzB,0DAA6C;QAA7C,oGAA6C;QAAiF,0DAAY;QAAZ,6EAAY;;;;;;;;;;;;;;AE/BtK;AAAA;AAAA;AAAA;AAAA;AAAuD;AACE;;;AAEzD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAC,qEAAc,EAAC;CACpC,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;;;;;;;;;;;;;ACTxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAIf;;;;;AAM1C,MAAM,YAAY;IAEvB,YACY,IAAgB,EAChB,gBAAkC,EAClC,WAAwB;QAFxB,SAAI,GAAJ,IAAI,CAAY;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;IAChC,CAAC;IAEL,qBAAqB;IACrB,SAAS,CAAC,OAAW;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,iBAAiB,EAAE,OAAO,EAAE,EAAC,OAAO,EAAC,CAAC;aAC/F,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACrB,IAAI,CAAC,iEAAU,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;;wEAfU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACH;AAC8B;AACZ;AAC5B;AACS;AAET;;AAkBxC,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;+FALZ;QACR,wFAAW;QACX,2DAAY;KACb,YATQ;YACP,4DAAY;YACZ,wEAAkB;YAClB,oGAAqB;YACrB,qEAAgB;SACjB;mIAMU,WAAW,mBAbpB,qEAAc,aAGd,4DAAY;QACZ,wEAAkB;QAClB,oGAAqB;QACrB,qEAAgB","file":"components-login-login-module.js","sourcesContent":["<div class=\"row\">\r\n    <div class=\"fyt-login-container\">\r\n        <div class=\"col-md-4 col-4 offset-4 offset-md-4\">\r\n            <div class=\"ta-c\">\r\n                <!-- <img src=\"../../../../assets//img/logo.png\" width=\"100%\" alt=\"TRENDS\"> -->\r\n                <h6 class=\"new-Montserrat-Medium new-000000 fnt-30 py-2\" style=\"font-weight: 500;\">FUEL PRE ALERT</h6>\r\n            </div>\r\n        </div>\r\n        <mat-card>\r\n            <mat-card-title>Login <br>\r\n                <p class=\"fnt-14\">to access FUEL PRE ALERT dashboard</p>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Mobile Number</mat-label>\r\n                        <!-- <mat-icon matPrefix svgIcon=\"fyt-user-icon\"> &nbsp;</mat-icon> -->\r\n                        <input required type=\"text\" name=\"phoneNo\" matInput placeholder=\"Phone No\" [(ngModel)]=\"loginObj.phoneNo\">\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Password</mat-label>\r\n                        <!-- <mat-icon matPrefix svgIcon=\"fyt-lock-icon\"> &nbsp;</mat-icon> -->\r\n                        <input required type=\"password\" name=\"password\" matInput placeholder=\"********\" [(ngModel)]=\"loginObj.password\">\r\n                    </mat-form-field>\r\n                    <ng-container *ngIf=\"errorMessage\">\r\n                        <p class=\"animated fadeInUp slow fyt-error-message\">{{errorMessage}}</p>\r\n                    </ng-container>\r\n                    <div class=\"fyt-display-flex\">\r\n                        <!-- <mat-checkbox>Remember Me</mat-checkbox> -->\r\n                        <span class=\"sp\"></span>\r\n                        <!-- <a [routerLink]=\"['/forgetpassword/otp-request']\">Forgot Password?</a> -->\r\n                    </div>\r\n                    <button [disabled]=\"loginForm.invalid || disabledBtn\" type=\"submit\" mat-raised-button class=\"fyt-button fyt-full-screen fyt-fnt-bold\">{{loginBtn}}</button>\r\n                </form>\r\n                <!-- <p class=\"pt-15 fnt-12 ta-l\">Not a Registered Member? <a class=\"fnt-15\" [routerLink]=\"['/register']\">Register Now</a></p> -->\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../shared-modules/services/auth.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { LoginService } from '../login.service';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\n\r\n@Component({\r\n  selector: 'trends-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginObj: any = {};\r\n  iconUrl = '../../../assets/icons/svgIcons/';\r\n  errorMessage: any;\r\n  loginBtn: string = '';\r\n  disabledBtn: boolean = false;\r\n  counter: number = 0;\r\n  popupFlag: boolean = false;\r\n\r\n  constructor(    \r\n    private loginService: LoginService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    public sanitizer: DomSanitizer,\r\n    private iconRegistry: MatIconRegistry\r\n  ) {\r\n    this.loginBtn = 'LOG IN';\r\n    // this.iconRegistry.addSvgIcon(\r\n    //   'fyt-user-icon',\r\n    //   this.sanitizer.bypassSecurityTrustResourceUrl(this.iconUrl + 'icon _dgrey-01.svg'));\r\n    // this.iconRegistry.addSvgIcon(\r\n    //   'fyt-lock-icon',\r\n    //   this.sanitizer.bypassSecurityTrustResourceUrl(this.iconUrl + 'icon _dgrey-09.svg'));\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login() {\r\n    this.loginBtn = 'PLEASE WAIT...';\r\n    this.disabledBtn = true;\r\n    this.loginService.loginUser(this.loginObj).subscribe(res => {\r\n      if (res.status == 'Success') {\r\n        this.authService.storeUserData(res.jwt, res.payload);\r\n        // this.popupFlag = true;\r\n        // localStorage.setItem(\"popupFlag\", JSON.stringify(this.popupFlag));\r\n        this.router.navigate(['/trends/members']);\r\n      }\r\n      else {\r\n        if (res.statusCode == '002') {\r\n          this.errorMessage = 'Your username/password is incorrect'\r\n        }\r\n      }\r\n      this.disabledBtn = false;\r\n      this.loginBtn = 'LOG IN';\r\n    });\r\n  }\r\n\r\n  forgetpass() {\r\n    this.router.navigate(['forgetpassword']);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', component:LoginComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { GlobalApiService } from 'src/app/shared-modules/global-api.service';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(\r\n      private http: HttpClient,\r\n      private globalApiService: GlobalApiService,\r\n      private authService: AuthService\r\n  ) { }\r\n\r\n  // for login the User\r\n  loginUser(postObj:any): Observable<any> {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/web/adminLogin', postObj, {headers})\r\n    .pipe(map(res => res))\r\n    .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n}\r\n","import { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AngularMaterialModule } from 'src/app/shared-modules/angular.material.module';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { LoginService } from './login.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    AngularMaterialModule,\r\n    HttpClientModule\r\n  ],\r\n  providers:[\r\n    AuthService,\r\n    LoginService\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":"webpack:///"}