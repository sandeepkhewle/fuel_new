{"version":3,"sources":["./src/app/components/reports/reports/reports.component.ts","./src/app/components/reports/reports/reports.component.html","./src/app/components/reports/reports.service.ts","./src/app/components/reports/reports-routing.module.ts","./src/app/components/reports/reports.module.ts"],"names":[],"mappings":"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","file":"components-reports-reports-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../reports.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\n\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\nimport { default as _rollupMoment, Moment } from 'moment';\r\n\r\nconst moment = _rollupMoment || _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD MMM YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD MMM YYYY',\r\n    monthYearLabel: 'YYYY',\r\n    dateA11yLabel: 'DD MMM YYYY',\r\n    monthYearA11yLabel: 'YYYY',\r\n  },\r\n};\r\n\r\nexport const MY_FORMATS1 = {\r\n  parse: {\r\n    dateInput: 'MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'trends-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.css'],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\r\n    },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS1 },\r\n  ],\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  date = new FormControl(moment());\r\n  today: any;\r\n  reportsObj: any = {};\r\n  reportList: any;\r\n  loader: any = false;\r\n// today: any;\r\n  // reportsObj: any = {};\r\n  // reportList: any;\r\n  selectedReportName: any;\r\n  reportsSideData: any;\r\n  postObj: any = {\r\n    filters: {}\r\n  };\r\n  settingsRestrictions: any;\r\n  restrictionFlag: boolean = false;\r\n  isRestricted: boolean = true;\r\n  constructor(\r\n    private reportsService: ReportsService,\r\n    public router: Router\r\n  ) {\r\n    this.today = new Date();\r\n  }\r\n\r\n  // setMonthAndYear(normalizedMonthAndYear: Moment, datepicker: MatDatepicker<Moment>, filter) {\r\n    //   console.log(\"-----\", normalizedMonthAndYear, datepicker, filter);\r\n    //   const ctrlValue = this.date.value!;\r\n    //   ctrlValue.month(normalizedMonthAndYear.month());\r\n    //   ctrlValue.year(normalizedMonthAndYear.year());\r\n    //   this.date.setValue(ctrlValue);\r\n    //   datepicker.close();\r\n    //   this.postObj.filters[filter.model] = [`${normalizedMonthAndYear.month()} ${normalizedMonthAndYear.year()}`];\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    // this.settingsRestrictions = JSON.parse(localStorage.getItem('settings'));\r\n    this.getReportListFun();\r\n  }\r\n\r\n  getReportListFun() {\r\n    this.reportsService.getReportList({}).subscribe(res => {\r\n      if (res && res.data && res.data.length > 0) {\r\n        this.reportList = res.data;\r\n        this.reportsSideData = this.reportList[0];\r\n        // console.log('this.reportsSideData', this.reportsSideData);\r\n        this.selectedReportName = this.reportsSideData.name;\r\n      }\r\n    });\r\n  }\r\n\r\n  getReport(page: any, data: any) {\r\n    console.log(\"data\", data);\r\n    let sendObj = {\r\n      \"filters\": { ...(data.filters), ...(this.postObj.filters) },\r\n      \"page\": data.table\r\n    }\r\n    console.log(\"sendObj\", sendObj);\r\n    this.reportsService.getReport(sendObj).subscribe(res => {\r\n      this.postObj = {\r\n        filters: {}\r\n      };\r\n    });\r\n  }\r\n\r\n  // for filters\r\n  onChangeFilter(param1: any, model: any, event: any) {\r\n  }\r\n\r\n  openDetails(data: any) {\r\n    // let pageMap = { 'excelMembers': \"91\", 'subscription': \"92\", 'enquiryExcel': \"93\", 'staff': \"94\", 'trainer': \"95\", 'accounts': \"96\", 'getMemberPayment': \"97\", 'expense': \"98\" }\r\n    // let pageNo = pageMap[data.table];\r\n    // if (this.settingsRestrictions && this.settingsRestrictions.includes(pageNo)) {\r\n    //   this.isRestricted = false;\r\n    // } else this.isRestricted = true;\r\n    console.log('openDetails', data);\r\n\r\n    this.reportsSideData = data;\r\n    this.selectedReportName = this.reportsSideData.name;\r\n  }\r\n\r\n  restrict() {\r\n    this.restrictionFlag = true;\r\n  }\r\n\r\n  onCardAction() {\r\n    this.restrictionFlag = false;\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"loader\">\r\n    <div class=\"fyt-spinner-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <div class=\"text-center fyt-loading-msg\">Please wait</div>\r\n    </div>\r\n</ng-container>\r\n\r\n<div class=\"container-fluid  pl-0 pr-0 ml-0 mr-0\">\r\n    <div class=\"row new-white-bg py-3 \">\r\n        <div class=\"col-md-4 py-3\">\r\n            <button type=\"button\" class=\"ta-c new-tab-head-invoice\">\r\n                <!-- <img src=\"../../../../assets/icons/sidenavIcons/enquiry1.png\" width=\"18px\" style=\"margin-top: -3px;\"\r\n                    alt=\"\">&nbsp; -->\r\n                ALL REPORTS</button>\r\n            <!-- <h6 class=\"new-000000 new-Montserrat-Medium fnt-20 pl-10\">ALL REPORTS</h6> -->\r\n            <!-- <img src=\"../../../../assets/icons/new/all reports@2x.png\" width=\"30px\" alt=\"\">&nbsp; ADD LATER -->\r\n        </div>\r\n        <!-- <div class=\"col-md-12\">\r\n            <ng-container *ngFor=\"let repL of reportList;let m = index\">\r\n\r\n                <mat-expansion-panel class=\"my-3 mx-5\" (opened)=\"panelOpenState = true\"\r\n                    (closed)=\"panelOpenState = false\">\r\n                    <mat-expansion-panel-header class=\"expansion-header-background specific-class\"\r\n                        style=\"height: 48px !important;\">\r\n                        <mat-panel-title class=\"new-ffffff new-Montserrat-Medium fnt-20\">\r\n                            <img src=\"../../../../assets/icons/new/{{repL.icon}}\" width=\"25px\" alt=\"\">\r\n                            &nbsp;&nbsp;&nbsp; {{repL.name}}\r\n                            <span class=\"fr\">0{{repL.List.length}}</span>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n\r\n                    <ng-container *ngFor=\"let re of repL.List;let m = index\">\r\n\r\n                        <div class=\"col-md-12 py-2\">\r\n                            <div class=\"row pt-5\">\r\n                                <div class=\"col-md-7\">\r\n                                    <h6 class=\"fnt-18 pt-15 new-4D4D4D new-Montserrat-Medium\">\r\n                                        {{re.name}}\r\n                                    </h6>\r\n                                </div>\r\n                                <div class=\"col-md-5 py-2 pl-0 pr-0 ml-0 mr-0\">\r\n                                    <h6 class=\"fnt-18 new-2E7D32 new-Montserrat-Medium\">\r\n                                    <button type=\"button\" class=\"ta-c new-corner-btn px-3 fr\"\r\n                                        (click)=\"getReport(repL.table, re)\">\r\n\r\n                                        <img src=\"../../../../assets/icons/new/EXCEL@1.5x.png\" width=\"20px\" alt=\"\">\r\n                                        &nbsp;&nbsp;&nbsp;\r\n                                        <span\r\n                                            class=\"fnt-15 fr new-2E7D32 new-Montserrat-Medium\">Download</span></button>\r\n\r\n                                    <button type=\"button\" class=\"ta-c new-corner-btn px-3 fr\"><span class=\"fnt-15 fr new-4D4D4D new-Montserrat-Medium\">Advance</span></button>\r\n\r\n\r\n                                    </h6>\r\n                                </div>\r\n                                <div class=\"col-md-12\" style=\"border-bottom: 0.5px solid #1A1A1A;\"></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                </mat-expansion-panel>\r\n\r\n            </ng-container>            \r\n        </div> -->\r\n        <div class=\"col-md-8\"></div>\r\n\r\n        <div class=\"col-md-4 col-12\">\r\n            <div class=\"row py-3\">\r\n                <ng-container *ngFor=\"let repL of reportList;let m = index\">\r\n                    <div class=\"col-md-12 col-12 py-2\">\r\n                        <h6 class=\"new-1A1A1A fnt-15 new-Montserrat-Medium fyt-link-btn\" (click)=\"openDetails(repL)\">\r\n                            {{repL.name}}\r\n                        </h6>\r\n                        <!-- [ngClass]=\"(repL.name == selectedReportName) ? 'fyt-underline' : ''\" Add above later -->\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-8 col-12 py-4 pl-0 ml-0 mt-5\">\r\n            <div class=\"row\" style=\"background-color: #F2F2F2; border-radius: 4px;\" *ngIf=\"reportsSideData\">\r\n                <ng-container *ngFor=\"let re of reportsSideData.List;let m = index\">\r\n\r\n                    <div class=\"col-md-12 py-2\">\r\n                        <div class=\"row pt-5\">\r\n                            <div class=\"col-md-4\">\r\n                                <h6 class=\"new-1A1A1A fnt-15 new-Montserrat-Medium fyt-link-btn\"\r\n                                    (click)=\"openDetails(re)\">\r\n                                    <!-- <img src=\"../../../../assets/icons/new/{{re.name}}.png\" width=\"25px\" alt=\"\"> &nbsp;&nbsp;&nbsp; -->\r\n                                    {{re.name}}\r\n                                </h6>\r\n                            </div>\r\n                            <div class=\"col-md-5 pl-0 pr-0\">\r\n                                <div class=\"row\">\r\n                                    <ng-container *ngFor=\"let filter of re.options;let i = index;\">\r\n                                        <ng-container\r\n                                            *ngIf=\"filter.type == 'select' && filter.options && filter.options.length > 0\">\r\n                                            <div class=\"col-md-12 col-lg-12\">\r\n                                                <mat-form-field>\r\n                                                    <mat-label>{{filter.name}}</mat-label>\r\n                                                    <mat-select [(ngModel)]=\"postObj.filters[filter.model]\"\r\n                                                        [name]=\"filter.model\"\r\n                                                        (change)=\"onChangeFilter(filter, filter.model, $event)\"\r\n                                                        [multiple]=\"filter.multiple\" #filterSelect=\"ngModel\">\r\n                                                        <ng-container *ngIf=\"filter.multiple\">\r\n                                                            <fyt-select-all [model]=\"filterSelect\" [values]=\"filter\">\r\n                                                            </fyt-select-all>\r\n                                                        </ng-container>\r\n                                                        <ng-container *ngIf=\"filter.value\">\r\n                                                            <mat-option *ngFor=\"let option of filter.options\"\r\n                                                                [value]=\"option[filter.value]\">\r\n                                                                {{ option[filter.display] }}\r\n                                                            </mat-option>\r\n                                                        </ng-container>\r\n                                                        <ng-container *ngIf=\"!filter.value\">\r\n                                                            <mat-option *ngFor=\"let option of filter.options\"\r\n                                                                [value]=\"option.id\">\r\n                                                                {{ option.name }}\r\n                                                            </mat-option>\r\n                                                        </ng-container>\r\n                                                    </mat-select>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf=\"filter.type == 'date'\">\r\n                                            <div class=\"col-md-6 col-lg-6\">\r\n                                                <!-- <mat-form-field>\r\n                                                    <mat-label>{{filter.name}}</mat-label>\r\n                                                    <input matInput [matDatepicker]=\"i\" (click)=\"i.open()\"\r\n                                                        [(ngModel)]=\"postObj.filters[filter.model]\"\r\n                                                        [min]=\"postObj.filters[filter.min]\" [max]=\"filter.max\">\r\n                                                    <mat-datepicker-toggle matSuffix [for]=\"i\"></mat-datepicker-toggle>\r\n                                                    <mat-datepicker #i></mat-datepicker>\r\n                                                </mat-form-field> -->\r\n                                            </div>\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf=\"filter.type == 'monthYear'\">\r\n                                            <div class=\"col-md-6 col-lg-6\">\r\n                                                <!-- <mat-form-field>\r\n                                                    <mat-label>{{filter.name}}</mat-label>\r\n                                                    <input matInput [matDatepicker]=\"dp\" [formControl]=\"date\"\r\n                                                        (click)=\"dp.open()\" [(ngModel)]=\"postObj.filters[filter.model]\">\r\n                                                    <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                                                    <mat-datepicker #dp startView=\"multi-year\"\r\n                                                        (monthSelected)=\"setMonthAndYear($event, dp,filter)\"\r\n                                                        panelClass=\"example-month-picker\">\r\n                                                    </mat-datepicker>\r\n                                                </mat-form-field> -->\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 py-2 pl-0 pr-0 ml-0 mr-0\">\r\n                                <!-- <h6 class=\"fnt-18 new-2E7D32 new-Montserrat-Medium\"> -->\r\n                                <button type=\"button\" mat-raised-button\r\n                                    class=\"new-tab-side-enquiry new-Montserrat-Medium\"\r\n                                    (click)=\"!isRestricted && restrict() || isRestricted && getReport(reportsSideData.table, re)\">\r\n                                    Download\r\n                                </button>\r\n                            </div>\r\n                            <!-- <div class=\"col-md-12\" style=\"border-bottom: 0.5px solid #1A1A1A;\"></div> -->\r\n\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-container *ngIf=\"restrictionFlag\">\r\n    <div class=\"fyt-modal-design-branch animated slideInUp slow \" style=\"z-index: 3;\">\r\n        <!-- <fyt-restriction-popup [InutDataObj]=\"restrictionObj\" (onActon)=\"onCardAction($event)\">\r\n        </fyt-restriction-popup> -->\r\n    </div>\r\n</ng-container>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport FileSaver from 'file-saver';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GlobalApiService } from 'src/app/shared-modules/global-api.service';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private globalApiService: GlobalApiService,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n\r\n  // getAllReports(postBody: any): Observable<any> {\r\n  //   return this.http.post(this.globalApiService.getApiUrl() + '/structure/reportList', postBody)\r\n  //     .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  // }\r\n\r\n  getReportList(postBody: {}): Observable<any> {\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/structure/reportList', postBody)\r\n      .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n\r\n  getReport(postBody: any) {\r\n    // let headers = new Headers();\r\n    // headers.append(\"Accept\", 'application/x-www-form-urlencoded');\r\n    // headers.append('Content-Type', 'application/json');\r\n    // headers.append(\"Authorization\", localStorage.getItem('token'));\r\n\r\n    // let options = new RequestOptions({\r\n    //   headers: headers\r\n    // })\r\n\r\n    // options.responseType = ResponseContentType.Blob;\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/structure/exportExcel', postBody, { observe: 'response', responseType: 'blob' }).pipe(map((response:any) => {\r\n        // Removed checking of valid response\r\n        let fileBlob = response.body;\r\n        let blob = new Blob([fileBlob], {\r\n          type: 'application/pdf' // must match the Accept type\r\n        });\r\n        let filename = postBody.filters.expenseType === 'Salary' ? 'Salary.xlsx' : postBody.page + '.xlsx';\r\n        FileSaver.saveAs(blob, filename);\r\n      })).pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n\r\n  // getStaffList(postBody: any): Observable<any> {\r\n  //   return this.http.post(this.globalApiService.getApiUrl() + '/structure/getStaffList', postBody)\r\n  //     .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  // }\r\n\r\n  // getReport(postBody: { filters: any; page: any; }): Observable<any> {\r\n  //   return this.http.post(this.globalApiService.getApiUrl() + '/structure/exportExcel', postBody)\r\n  //     .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  // }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReportsComponent } from './reports/reports.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', component: ReportsComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularMaterialModule } from 'src/app/shared-modules/angular.material.module';\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ReportsService } from './reports.service';\r\nimport { FormatterModule } from 'src/app/shared-modules/format-module/formatter.module';\r\nimport { SelectAllModule } from '../generic-modules/select-all/select-all.module';\r\nimport { RestrictionModule } from '../generic-modules/restriction/restriction.module';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n// import { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReportsRoutingModule,\r\n    AngularMaterialModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ReportsRoutingModule,\r\n    AngularMaterialModule,\r\n    FormatterModule,\r\n    SelectAllModule,\r\n    RestrictionModule,\r\n    MatMomentDateModule,\r\n    MatNativeDateModule,\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n"],"sourceRoot":"webpack:///"}