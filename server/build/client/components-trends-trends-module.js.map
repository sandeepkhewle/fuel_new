{"version":3,"sources":["./src/app/components/trends/trends-routing.module.ts","./src/app/components/trends/add-trends/add-trends.component.ts","./src/app/components/trends/add-trends/add-trends.component.html","./src/app/components/trends/trends.service.ts","./src/app/components/trends/trends.module.ts","./src/app/components/trends/trends/trends.component.html","./src/app/components/trends/trends/trends.component.ts"],"names":[],"mappings":"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","file":"components-trends-trends-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TrendsComponent } from './trends/trends.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component:TrendsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TrendsRoutingModule { }\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\n\r\n\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\nimport { default as _rollupMoment } from 'moment';\r\nimport { TrendsService } from '../trends.service';\r\n\r\nconst moment = _rollupMoment || _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD MMM YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD MMM YYYY',\r\n    monthYearLabel: 'YYYY',\r\n    dateA11yLabel: 'DD MMM YYYY',\r\n    monthYearA11yLabel: 'YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'trends-add-trends',\r\n  templateUrl: './add-trends.component.html',\r\n  styleUrls: ['./add-trends.component.css'],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class AddTrendsComponent implements OnInit, OnChanges {\r\n  @Input() InutDataObj: any;\r\n  @Output() onActon = new EventEmitter<any>();\r\n  trendsObj: any = {};\r\n  status: any = 'Create'\r\n  monthlyArray: any = [\r\n    {\r\n      \"name\": \"LPG/GAS CYL (DOM)\",\r\n      \"value\": \"LPG/GAS CYL (DOM)\",\r\n      \"trendType\": \"lpg\"\r\n    },\r\n    {\r\n      \"name\": \"MTO\",\r\n      \"value\": \"MTO\",\r\n      \"trendType\": \"mto\"\r\n    },\r\n    {\r\n      \"name\": \"HEXANE\",\r\n      \"value\": \"HEXANE\",\r\n      \"trendType\": \"hexane\"\r\n    },\r\n    {\r\n      \"name\": \"KEROSENE\",\r\n      \"value\": \"KEROSENE\",\r\n      \"trendType\": \"kerosene\"\r\n    },\r\n    {\r\n      \"name\": \"LPG/GAS CYL (NON-DOM)\",\r\n      \"value\": \"LPG/GAS CYL (NON-DOM)\",\r\n      \"trendType\": \"lpg\"\r\n    }\r\n  ];\r\n  fortnightArray: any = [\r\n    {\r\n      \"name\": \"BITUMEN\",\r\n      \"value\": \"BITUMEN\",\r\n      \"trendType\": \"bitumen/fo/hsd/ldo\"\r\n    },\r\n    {\r\n      \"name\": \"FURNACE OIL\",\r\n      \"value\": \"FURNACE OIL\",\r\n      \"trendType\": \"bitumen/fo/hsd/ldo\"\r\n    },\r\n    {\r\n      \"name\": \"HSD(INSTITUTIONAL)\",\r\n      \"value\": \"HSD(INSTITUTIONAL)\",\r\n      \"trendType\": \"bitumen/fo/hsd/ldo\"\r\n    },\r\n    {\r\n      \"name\": \"LDO\",\r\n      \"value\": \"LDO\",\r\n      \"trendType\": \"bitumen/fo/hsd/ldo\"\r\n    }\r\n\r\n  ];\r\n  trendNames: any = [\r\n    {\r\n      \"name\": \"Fortnight Product\",\r\n      \"value\": \"fortnight\"\r\n    },\r\n    {\r\n      \"name\": \"Monthly Product\",\r\n      \"value\": \"monthly\"\r\n    }\r\n  ];\r\n  trendArray: any = [\r\n    {\r\n      \"name\": \"+\",\r\n      \"value\": \"+\"\r\n    },\r\n    {\r\n      \"name\": \"-\",\r\n      \"value\": \"-\"\r\n    }\r\n  ];\r\n\r\n  msdFlag: boolean = false;\r\n  lpgFlag: boolean = false;\r\n  bitumenFlag: boolean = false;\r\n  updateFortFlag: boolean = false;\r\n  updateMonthFlag: boolean = false;\r\n  trendsUnitArray: any = [\r\n    'KL', 'CYLINDER', 'MT'\r\n  ];\r\n  constructor(\r\n    public trendsService: TrendsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.InutDataObj.appId) {\r\n      this.trendsObj = this.InutDataObj;\r\n      this.status = this.InutDataObj.status;\r\n      this.checkUpdateFields();\r\n    } else {\r\n      this.showUpdateFields();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n  }\r\n\r\n  showUpdateFields() {\r\n    this.updateFortFlag = false;\r\n    this.updateMonthFlag = false;\r\n    if (this.trendsObj.trendName == 'fortnight') this.updateFortFlag = true;\r\n    if (this.trendsObj.trendName == 'monthly') this.updateMonthFlag = true;\r\n\r\n  }\r\n  checkUpdateFields() {\r\n    this.updateFortFlag = false;\r\n    this.updateMonthFlag = false;\r\n    if (this.trendsObj.trendName == 'fortnight') this.updateFortFlag = true;\r\n    if (this.trendsObj.trendName == 'monthly') this.updateMonthFlag = true;\r\n  }\r\n  showInputFields(data: any) {\r\n    let selectedArray = [];\r\n    if (this.updateFortFlag == true) selectedArray = this.fortnightArray\r\n    if (this.updateMonthFlag == true) selectedArray = this.monthlyArray\r\n    let obj = selectedArray.find((o: any) => o.value === data)\r\n    this.trendsObj.trendType = obj.trendType;\r\n    this.trendsObj.productName = obj.value;\r\n  }\r\n  checkInputFields() {\r\n    this.msdFlag = false;\r\n    this.lpgFlag = false;\r\n    this.bitumenFlag = false;\r\n\r\n\r\n    if (this.trendsObj.appId == 'msd') {\r\n      // this.trendsObj={};\r\n      this.trendsObj.appId = 'msd';\r\n      this.msdFlag = true;\r\n    }\r\n    if (this.trendsObj.appId == 'lpg') {\r\n      // this.trendsObj={};\r\n      this.trendsObj.appId = 'lpg';\r\n      this.lpgFlag = true;\r\n    }\r\n    if (this.trendsObj.appId == 'bitumen') {\r\n      // this.trendsObj={};\r\n      this.trendsObj.appId = 'bitumen';\r\n      this.bitumenFlag = true;\r\n    }\r\n  }\r\n  showInput1Fields() {\r\n    this.msdFlag = false;\r\n    this.lpgFlag = false;\r\n    this.bitumenFlag = false;\r\n\r\n\r\n    if (this.trendsObj.appId2 == 'msd') {\r\n      this.trendsObj = {};\r\n      this.trendsObj.appId2 = 'msd';\r\n      this.msdFlag = true;\r\n    }\r\n    if (this.trendsObj.appId2 == 'lpg') {\r\n      this.trendsObj = {};\r\n      this.trendsObj.appId2 = 'lpg';\r\n      this.lpgFlag = true;\r\n    }\r\n    if (this.trendsObj.appId2 == 'bitumen') {\r\n      this.trendsObj = {};\r\n      this.trendsObj.appId2 = 'bitumen';\r\n      this.bitumenFlag = true;\r\n    }\r\n  }\r\n\r\n  checkInput1Fields() {\r\n    this.msdFlag = false;\r\n    this.lpgFlag = false;\r\n    this.bitumenFlag = false;\r\n\r\n\r\n    if (this.trendsObj.appId2 == 'msd') {\r\n      // this.trendsObj={};\r\n      this.trendsObj.appId2 = 'msd';\r\n      this.msdFlag = true;\r\n    }\r\n    if (this.trendsObj.appId2 == 'lpg') {\r\n      // this.trendsObj={};\r\n      this.trendsObj.appId2 = 'lpg';\r\n      this.lpgFlag = true;\r\n    }\r\n    if (this.trendsObj.appId2 == 'bitumen') {\r\n      // this.trendsObj={};\r\n      this.trendsObj.appId2 = 'bitumen';\r\n      this.bitumenFlag = true;\r\n    }\r\n  }\r\n\r\n\r\n  closeDialog(flag: any) {\r\n    this.onActon.emit({ flag: flag, page: 'addTrends' });\r\n  }\r\n\r\n  createTrend() {\r\n    if (this.InutDataObj.appId) {\r\n      this.trendsService.updateTrendsFun(this.trendsObj).subscribe(res => {\r\n        if (res.status == 'Success') {\r\n          this.closeDialog('cancel');\r\n        }\r\n        else {\r\n        }\r\n      });\r\n    } else {\r\n      this.trendsService.createTrendsFun(this.trendsObj).subscribe(res => {\r\n        if (res.status == 'Success') {\r\n          this.closeDialog('cancel');\r\n        }\r\n        else {\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row new-white-bg mb-10\">\r\n    <div class=\"col-md-12 pt-20\">\r\n        <div class=\"fyt-display-flex\">\r\n            <h3 class=\"new-000000 new-Montserrat-Medium fnt-20 pl-10\">{{status}} New Trends </h3>\r\n            <span class=\"sp\"></span>\r\n            <span class=\"new-Montserrat-Medium fyt-link-btn new-808080\"> <span style=\"border-bottom: 1px solid #808080;\"\r\n                    (click)=\"closeDialog('cancel')\">Close &nbsp;x</span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12 py-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Trend Name</mat-label>\r\n                    <mat-select name=\"trendName\" [(ngModel)]=\"trendsObj.trendName\"\r\n                        (ngModelChange)=\"showUpdateFields()\" required>\r\n                        <mat-option *ngFor=\"let trend of trendNames\" [value]=\"trend.value\">{{trend.name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\" *ngIf=\"updateFortFlag\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Product Name</mat-label>\r\n                    <mat-select name=\"appId2\" [(ngModel)]=\"trendsObj.productName\" (ngModelChange)=\"showInputFields($event)\"\r\n                        required>\r\n                        <mat-option *ngFor=\"let app1 of fortnightArray\" [value]=\"app1.value\">{{app1.name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\" *ngIf=\"updateMonthFlag\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Product Name</mat-label>\r\n                    <mat-select name=\"appId\" [(ngModel)]=\"trendsObj.productName\" (ngModelChange)=\"showInputFields($event)\"\r\n                        required>\r\n                        <mat-option *ngFor=\"let app1 of monthlyArray\" [value]=\"app1.value\">{{app1.name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Valid From</mat-label>\r\n                    <input matInput [matDatepicker]=\"validFrom\" [(ngModel)]=\"trendsObj.validFrom\" name=\"validFrom\"\r\n                        (click)=\"validFrom.open()\" [ngModelOptions]=\"{standalone: true}\" (keydown)=\"false\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"validFrom\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #validFrom></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Valid Through</mat-label>\r\n                    <input matInput [matDatepicker]=\"validThrough\" [(ngModel)]=\"trendsObj.validThrough\"\r\n                        name=\"validThrough\" [min]=\"trendsObj.validFrom\" (click)=\"validThrough.open()\"\r\n                        [ngModelOptions]=\"{standalone: true}\" (keydown)=\"false\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"validThrough\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #validThrough></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Trend Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"trendDate\" [(ngModel)]=\"trendsObj.trendDate\" name=\"trendDate\"\r\n                        (click)=\"trendDate.open()\" [min]=\"trendsObj.validFrom\" [max]=\"trendsObj.validThrough\"\r\n                        [ngModelOptions]=\"{standalone: true}\" (keydown)=\"false\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"trendDate\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #trendDate></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Trend Value</mat-label>\r\n                    <input matInput type=\"number\" name=\"trendValue\" [(ngModel)]=\"trendsObj.trendValue\" required>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Trend Unite</mat-label>\r\n                    <mat-select name=\"trendUnite\" [(ngModel)]=\"trendsObj.trendUnite\" required>\r\n                        <mat-option *ngFor=\"let unit of trendsUnitArray\" [value]=\"unit\">{{unit}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Trend</mat-label>\r\n                    <mat-select name=\"trend\" [(ngModel)]=\"trendsObj.trend\" required>\r\n                        <mat-option *ngFor=\"let app1 of trendArray\" [value]=\"app1.value\">{{app1.name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n\r\n\r\n            <!-- <ng-container *ngIf=\"msdFlag\">\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>MS</mat-label>\r\n                    <input matInput type=\"text\" name=\"ms\" [(ngModel)]=\"trendsObj.ms\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>HSD</mat-label>\r\n                    <input matInput type=\"text\" name=\"hsd\" [(ngModel)]=\"trendsObj.hsd\">\r\n                </mat-form-field>\r\n            </div>\r\n        </ng-container> -->\r\n            <!-- <ng-container *ngIf=\"lpgFlag\">\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Fourteen Kg</mat-label>\r\n                    <input matInput type=\"text\" name=\"fourteenKg\" [(ngModel)]=\"trendsObj.fourteenKg\">\r\n                </mat-form-field>\r\n            </div>\r\n            \r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Nineteen Kg</mat-label>\r\n                    <input matInput type=\"text\" name=\"nineteenKg\" [(ngModel)]=\"trendsObj.nineteenKg\">\r\n                </mat-form-field>\r\n            </div>\r\n        </ng-container> -->\r\n\r\n            <!-- <ng-container *ngIf=\"bitumenFlag\">\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Bitumen</mat-label>\r\n                    <input matInput type=\"text\" name=\"bitumen\" [(ngModel)]=\"trendsObj.bitumen\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Furnace Oil</mat-label>\r\n                    <input matInput type=\"text\" name=\"furnaceOil\" [(ngModel)]=\"trendsObj.furnaceOil\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>LDO</mat-label>\r\n                    <input matInput type=\"text\" name=\"ldo\" [(ngModel)]=\"trendsObj.ldo\">\r\n                </mat-form-field>\r\n            </div>\r\n        </ng-container> -->\r\n            <div class=\"col-lg-12 ta-c pb-20\">\r\n                <button class=\"new-btn-8CC63F-popup px-5 py-1\" (click)=\"createTrend()\">{{status}} Trend</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { GlobalApiService } from 'src/app/shared-modules/global-api.service';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrendsService {\r\n\r\n  constructor(    \r\n    private http: HttpClient,\r\n    private globalApiService: GlobalApiService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n    createTrendsFun(postObj:any):Observable<any>{\r\n      return this.http.post(this.globalApiService.getApiUrl() + '/trend/create', postObj)\r\n          .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n  }\r\n  updateTrendsFun(postObj:any):Observable<any>{\r\n    return this.http.post(this.globalApiService.getApiUrl() + '/trend/update', postObj)\r\n        .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n}\r\n\r\ndeleteTrendsFun(postObj:any):Observable<any>{\r\n  return this.http.post(this.globalApiService.getApiUrl() + '/trend/delete', postObj)\r\n      .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TrendsRoutingModule } from './trends-routing.module';\r\nimport { TrendsComponent } from './trends/trends.component';\r\nimport { AddTrendsComponent } from './add-trends/add-trends.component';\r\nimport { AngularMaterialModule } from 'src/app/shared-modules/angular.material.module';\r\nimport { TrendsService } from './trends.service';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { DatatableModule } from '../generic-modules/generic-table/datatable.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TrendsComponent,\r\n    AddTrendsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TrendsRoutingModule,\r\n    AngularMaterialModule,\r\n    DatatableModule\r\n  ],\r\n  exports:[AddTrendsComponent],\r\n  providers:[TrendsService,\r\n  AuthService]\r\n})\r\nexport class TrendsModule { }\r\n","<div class=\"row new-white-bg py-3\">\r\n    <div class=\"col-md-4 col-lg-4 py-1 ta-c \">\r\n        <button type=\"button\" class=\"ta-c\" [ngClass]=\"msdFlag ? 'new-workout-btn' :'new-workout-btn-unselect'\"\r\n            (click)=\"changeTrends('fortnight')\">\r\n            <img src=\"../../../../assets/icons/sidenavIcons/enquiry1.png\" width=\"18px\" style=\"margin-top: -3px;\"\r\n                alt=\"\">&nbsp;\r\n            FORTNIGHT PRODUCTS</button>\r\n    </div>\r\n    <div class=\"col-md-4 col-lg-4 py-1 ta-c \">\r\n        <button type=\"button\" class=\"ta-c\" [ngClass]=\"lpgFlag ? 'new-diet-btn' :'new-workout-btn-unselect'\"\r\n            (click)=\"changeTrends('monthly')\">\r\n            <img src=\"../../../../assets/icons/sidenavIcons/enquiry1.png\" width=\"18px\" style=\"margin-top: -3px;\"\r\n                alt=\"\">&nbsp;\r\n            MONTHLY PRODUCTS</button>\r\n    </div>\r\n    <!-- <div class=\"col-md-2 col-lg-2 py-1 ta-c \">\r\n        <button type=\"button\" class=\"ta-c\" [ngClass]=\"bitumenFlag ? 'new-food-btn' :'new-workout-btn-unselect'\" (click)=\"changeTrends('bitumen')\">\r\n            <img src=\"../../../../assets/icons/sidenavIcons/enquiry1.png\" width=\"18px\" style=\"margin-top: -3px;\"\r\n                alt=\"\">&nbsp;\r\n                BITUMEN TRENDS</button>\r\n    </div> -->\r\n    <!-- <div class=\"col-md-4 col-lg-3 py-1 ta-c \">\r\n        \r\n    </div> -->\r\n    <div class=\"col-md-4 col-lg-4 pl-0 ml-0 ta-c\">\r\n        <ng-container>\r\n            <button type=\"button\" mat-raised-button class=\"fr-side new-tab-side-enquiry\" style=\"margin-right:auto\"\r\n                (click)=\"createNewTrends()\">ADD TREND</button>\r\n        </ng-container>\r\n\r\n    </div>\r\n\r\n</div>\r\n<div #target></div>\r\n<div class=\"row\" style=\"margin-top: -17px;\">\r\n    <div class=\"col-md-2 col-lg-2 ta-c\">\r\n        <ng-container *ngIf=\"msdFlag\">\r\n            <img src=\"../../../../assets/img/down-triangle.png\" width=\"30px\" alt=\"\">\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"col-md-2 col-lg-2 ta-c\">\r\n        <ng-container *ngIf=\"lpgFlag\">\r\n            <img src=\"../../../../assets/img/down-triangle.png\" width=\"30px\" alt=\"\">\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"col-md-2 col-lg-2 ta-c\">\r\n        <ng-container *ngIf=\"bitumenFlag\">\r\n            <img src=\"../../../../assets/img/down-triangle.png\" width=\"30px\" alt=\"\">\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"openTrendsForm\">\r\n    <trends-add-trends [InutDataObj]=\"passObj\" (onActon)=\"onCardAction($event)\"></trends-add-trends>\r\n</ng-container>\r\n\r\n\r\n<div class=\"row new-white-bg py-3\">\r\n    <div class=\"col-md-12 pl-0 pr-0 ml-0 mr-0\">\r\n        <ng-container>\r\n            <ng-container *ngIf=\"msdFlag\">\r\n                <ng-container *ngIf=\"postObj.page\">\r\n                    <trends-datatable class=\"mt-0 mb-0 pt-0 pb-0\" [postObj]=\"postObj\"\r\n                        (onSelectRows)=\"onRowsSelected($event)\" (onRowClickEvent)=\"onRowClick($event)\"\r\n                        (onActonModal)=\"onModalAction($event, target)\">\r\n                    </trends-datatable>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"lpgFlag\">\r\n                <ng-container *ngIf=\"postObj.page\">\r\n                    <trends-datatable class=\"mt-0 mb-0 pt-0 pb-0\" [postObj]=\"postObj\"\r\n                        (onSelectRows)=\"onRowsSelected($event)\" (onRowClickEvent)=\"onRowClick($event)\"\r\n                        (onActonModal)=\"onModalAction($event, target)\">\r\n                    </trends-datatable>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"bitumenFlag\">\r\n                <ng-container *ngIf=\"postObj.page\">\r\n                    <trends-datatable class=\"mt-0 mb-0 pt-0 pb-0\" [postObj]=\"postObj\"\r\n                        (onSelectRows)=\"onRowsSelected($event)\" (onRowClickEvent)=\"onRowClick($event)\"\r\n                        (onActonModal)=\"onModalAction($event, target)\">\r\n                    </trends-datatable>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-container *ngIf=\"deleteTrendsFlag\">\r\n    <div class=\"trends-modal-design-branch animated slideInUp slow row\" style=\"z-index: 3;\">\r\n        <div class=\"col-md-12 fyt-display-flex\">\r\n            <span class=\"sp\">\r\n            </span>\r\n            <span class=\"new-Montserrat-Medium fyt-link-btn new-999999\" (click)=\"closeDialog('cancel')\"> <span\r\n                    style=\"border-bottom: 1px solid #999999;\">Close &nbsp;x</span>\r\n            </span>\r\n        </div>\r\n        <div class=\"col-md-12 ta-c\" style=\"border-bottom: 1px solid #999999;\">\r\n            <h6 class=\"ta-c new-Montserrat-Regular fnt-15 new-333333\">Delete Trend Of {{deleteTrendData.appId |\r\n                titlecase}}</h6>\r\n            <span class=\"fnt-15 new-Montserrat-Regular new-808080 ta-c\">Are You Sure To Delete Trend</span>\r\n\r\n        </div>\r\n        <div class=\"col-md-6 col-6 py-3 pb-20\" style=\"text-align: end;\">\r\n            <button type=\"button\" class=\"new-Montserrat-Medium yes-btn\" style=\"text-align: initial;\"\r\n                (click)=\"deleteTrends(deleteTrendData)\"><img src=\"../../../../assets/img/yes.png\" width=\"22px\"\r\n                    style=\"margin-top: -2px;\" alt=\"\">&nbsp;Yes</button>\r\n        </div>\r\n        <div class=\"col-md-6 col-6 py-3 pb-20\" style=\"text-align: initial;\">\r\n            <button type=\"button\" class=\"new-Montserrat-Medium no-btn\" style=\"text-align: initial;\"\r\n                (click)=\"closeDialog('cancel')\"><img src=\"../../../../assets/img/no.png\" width=\"22px\"\r\n                    style=\"margin-top: -2px;\" alt=\"\">&nbsp;No</button>\r\n        </div>\r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { TrendsService } from '../trends.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'trends-trends',\r\n  templateUrl: './trends.component.html',\r\n  styleUrls: ['./trends.component.css']\r\n})\r\nexport class TrendsComponent implements OnInit {\r\n  openTrendsForm:boolean = false;\r\n  passObj:any={};\r\n  deleteTrendsFlag:boolean = false;\r\n  deleteTrendData:any;\r\n  postObj:any={\r\n    page :'fortnight'\r\n  }\r\n\r\n  msdFlag:boolean = true;\r\n  lpgFlag:boolean = false;\r\n  bitumenFlag:boolean = false;\r\n\r\n  constructor(\r\n    public trendsService:TrendsService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.applyFilters();\r\n    this.changeTrends('fortnight');\r\n  }\r\n\r\n  applyFilters() {\r\n    this.postObj = Object.assign({}, this.postObj)\r\n  }\r\n\r\n  changeTrends(name:any){\r\n    let urlToAdd = (this.router.url.includes('?')) ? this.router.url.split('?')[0] : this.router.url;\r\n    // console.log('urlToAdd', urlToAdd);\r\n\r\n    if (name) this.router.navigate([urlToAdd]);\r\n    this.msdFlag = false;\r\n    this.lpgFlag = false;\r\n    this.bitumenFlag = false;\r\n\r\n    if (name == 'fortnight') {\r\n      this.postObj = {\r\n        page : 'fortnight'\r\n      }\r\n      this.applyFilters();\r\n      this.msdFlag = true;\r\n    }\r\n    if (name == 'monthly') {\r\n      this.postObj = {\r\n        page : 'monthly'\r\n      }\r\n      this.applyFilters();\r\n      this.lpgFlag = true;\r\n    }\r\n    // if (name == 'bitumen') {\r\n    //   this.postObj = {\r\n    //     page : 'bitumen'\r\n    //   }\r\n    //   this.applyFilters();\r\n    //   this.bitumenFlag = true;\r\n    // }\r\n  }\r\n\r\n  createNewTrends(){\r\n    this.passObj = {};\r\n    this.openTrendsForm = true;\r\n  }\r\n  \r\n  onCardAction(event:any) {\r\n    this.openTrendsForm = false;\r\n    this.applyFilters();\r\n    // this.postObj = {\r\n    //   page : 'fortnight'\r\n    // }\r\n  }\r\n\r\n  onRowsSelected(event:any){\r\n\r\n  }\r\n\r\n  onRowsSelectedSub(event:any){\r\n\r\n  }\r\n\r\n  onRowClick(event:any){\r\n\r\n  }\r\n\r\n  onModalAction(event:any, $element:any){\r\n    this.openTrendsForm = false;\r\n  \r\n    this.deleteTrendsFlag = false;\r\n    if (event.name == 'deleteTrend') {\r\n      this.deleteTrendData = event.rowData;\r\n      this.deleteTrendsFlag = true;\r\n    }\r\n    if (event.name == 'updateTrend') {\r\n        this.openTrendsForm = false;   \r\n      setTimeout(() => {\r\n        this.passObj = event.rowData;\r\n        this.passObj.status = 'Update';\r\n        this.openTrendsForm = true;\r\n        $element.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  closeDialog(flag:any){\r\n    this.deleteTrendsFlag = false;\r\n    this.applyFilters();\r\n\r\n    // this.postObj = {\r\n    //   page : 'fortnight'\r\n    // }\r\n  }\r\n\r\n  deleteTrends(data:any){\r\n    let obj={\r\n      'trendsId': data.trendsId,\r\n      'appId':data.appId\r\n    }\r\n    this.trendsService.deleteTrendsFun(obj).subscribe(res => {\r\n      if (res.status == 'Success') {\r\n        this.closeDialog('cancel');\r\n        this.postObj = {\r\n          page : 'fortnight'\r\n        }\r\n      }\r\n      else {\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}