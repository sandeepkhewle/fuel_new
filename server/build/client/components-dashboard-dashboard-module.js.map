{"version":3,"sources":["./src/app/components/dashboard/dashboard.module.ts","./src/app/components/dashboard/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard-routing.module.ts","./src/app/components/dashboard/dashboard.service.ts"],"names":[],"mappings":"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","file":"components-dashboard-dashboard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DatatableModule } from '../generic-modules/generic-table/datatable.module';\r\nimport { AngularMaterialModule } from 'src/app/shared-modules/angular.material.module';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { DashboardService } from './dashboard.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    DatatableModule,\r\n    AngularMaterialModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    DashboardService\r\n]\r\n})\r\nexport class DashboardModule { }\r\n","<ng-container *ngIf=\"loader\">\r\n    <div class=\"fyt-spinner-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <div class=\"text-center fyt-loading-msg\">Please wait</div>\r\n    </div>\r\n</ng-container>\r\n<div class=\"row pl-0 pr-0 ml-0 mr-0\">\r\n    <ng-container *ngFor=\"let item of summaryData; let i = index\">\r\n    <div class=\"col-md-6 px-2\">\r\n        <div class=\"row py-3 pl-0 pr-0\" [ngClass]=\"{'new-msd-bg': item.name == 'fuel','new-lpg-bg': item.name == 'lpg','new-bitumen-bg': item.name == 'bitumen'}\">\r\n            <div class=\"col-md-12 px-3 py-2\">\r\n                <h6 class=\"new-Montserrat-Medium fnt-15 new-ffffff\">{{item.name | uppercase}}</h6>\r\n            </div>\r\n            <div class=\"col-md-12\" *ngFor=\"let dd of item.data; let j = index\">\r\n                <mat-card\r\n                            class=\"fyt-link-btn pl-0 pr-0 ml-0 mr-0 pb-0 pt-0 mb-0 mt-10 mb-10 mat-card-shadow new-Montserrat-Medium fnt-15 new-ffffff  \"\r\n                            style=\"height: 40px;\" [ngClass]=\"{'new-msd-int-bg': item.name == 'fuel','new-lpg-int-bg': item.name == 'lpg','new-bitumen-int-bg': item.name == 'bitumen'}\">\r\n                            <span class=\"fl pl-5 pt-10\">\r\n                                     {{dd.name | uppercase}}\r\n                            </span>\r\n                            <span class=\"fr pr-2 pt-2\">{{dd.value}}</span>\r\n                        </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../dashboard.service';\r\n\r\n@Component({\r\n  selector: 'trends-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  loader:boolean = false;\r\n  summaryData:any;\r\n\r\n  constructor(\r\n      public dashboardService: DashboardService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSummary();\r\n  }\r\n\r\n  \r\n  getSummary(){\r\n    this.loader = true;\r\n      this.dashboardService.getDashboardSummary({}).subscribe(res => {\r\n        if (res.status == 'Success') {\r\n        this.loader = false;\r\n        this.summaryData = res.payload.data;\r\n        }\r\n        else {\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', component: DashboardComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { GlobalApiService } from 'src/app/shared-modules/global-api.service';\r\nimport { AuthService } from 'src/app/shared-modules/services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(    \r\n    private http: HttpClient,\r\n    private globalApiService: GlobalApiService,\r\n    private authService: AuthService) { }\r\n\r\n    getDashboardSummary(postObj:any):Observable<any>{\r\n      return this.http.post(this.globalApiService.getApiUrl() + '/admin/summary', postObj)\r\n          .pipe(catchError((e: any) => this.authService.getCheckError(e)));\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}